<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>do not know</title><link href="/" rel="alternate"></link><link href="/feeds/all.atom.xml" rel="self"></link><id>/</id><updated>2014-08-14T06:43:00+08:00</updated><entry><title>An example of extension method &amp; generic method in c#</title><link href="/An-example-of-extension-method-generic-method-in-csharp.html" rel="alternate"></link><published>2014-08-14T06:43:00+08:00</published><author><name>lmatt wang</name></author><id>tag:,2014-08-14:An-example-of-extension-method-generic-method-in-csharp.html</id><summary type="html">&lt;p&gt;Extension methods are defined as static methods but are called by using
instance method syntax. Their first parameter specifies which type the
method operates on, and the parameter is preceded by the
&lt;strong&gt;&lt;a href="http://msdn.microsoft.com/en-us/library/dk1507sz.aspx"&gt;this&lt;/a&gt;&lt;/strong&gt;
modifier. Extension methods are only in scope when you explicitly import
the namespace into your source code with a &lt;span
class="input"&gt;using&lt;/span&gt; directive.&lt;/p&gt;
&lt;p&gt;A generic method is a method that is declared with type parameters&lt;/p&gt;
&lt;p&gt;
This example include Extension method &amp; generic method:

&lt;script src="https://gist.github.com/lmatt-bit/2ce8e1419ebcbd5d6ab9.js"&gt;&lt;/script&gt;
&lt;/p&gt;</summary></entry><entry><title>How to install ROR on ubuntu</title><link href="/How-to-install-ROR-on-ubuntu.html" rel="alternate"></link><published>2014-08-11T23:30:00+08:00</published><author><name>lmatt wang</name></author><id>tag:,2014-08-11:How-to-install-ROR-on-ubuntu.html</id><summary type="html">&lt;ul&gt;
&lt;li&gt;
sudo apt-get install build-essential

&lt;/li&gt;
-   This command is to install essential tools for building codes

&lt;li&gt;
sudo apt-get install ruby 

&lt;/li&gt;
-   This command is to install ruby

&lt;li&gt;
sudo apt-get install ruby-dev 

&lt;/li&gt;
-   This command is to install ruby dev, which can solve
    "`ERROR: Failed to build gem native extension"`

&lt;li&gt;
`sudo apt-get install rdoc`

&lt;/li&gt;
-   `This command is to install r doc, which can solve one issue( i forgot the details :( ) `

&lt;li&gt;
gem install rails

&lt;/li&gt;
-   This command is to install rails

&lt;/ul&gt;</summary></entry><entry><title>Privacy policy for our products</title><link href="/Privacy-policy-for-our-products.html" rel="alternate"></link><published>2013-05-12T06:00:00+08:00</published><author><name>lmatt wang</name></author><id>tag:,2013-05-12:Privacy-policy-for-our-products.html</id><summary type="html">&lt;p&gt;Our products will not use your any information for any purpose! Please
feel free to use our products.\
Thanks.&lt;/p&gt;</summary></entry><entry><title>Html Agility Pack使用实例</title><link href="/Html-Agility-Packshiyongshili.html" rel="alternate"></link><published>2013-04-03T08:30:00+08:00</published><author><name>lmatt wang</name></author><id>tag:,2013-04-03:Html-Agility-Packshiyongshili.html</id><summary type="html">&lt;p&gt;Html Agility
Pack是C#语言下一个非常实用的html解析库（官方网址：&lt;a href="http://htmlagilitypack.codeplex.com/"&gt;http://htmlagilitypack.codeplex.com/&lt;/a&gt;）。以下Html
Agility Pack的使用实例：&lt;/p&gt;
&lt;div&gt;

&lt;div&gt;

&lt;script src="https://gist.github.com/lmatt-bit/5302231.js"&gt;&lt;/script&gt;

&lt;/div&gt;

&lt;/div&gt;</summary></entry><entry><title>打包python运行环境</title><link href="/dabaopythonyunxinghuanjing.html" rel="alternate"></link><published>2013-03-31T20:51:00+08:00</published><author><name>lmatt wang</name></author><id>tag:,2013-03-31:dabaopythonyunxinghuanjing.html</id><summary type="html">&lt;p&gt;1.准备以下文件：\
      python.exe(python安装目录下)\
      python27.dll(python安装目录下或System32目录下)\
      DLLs目录(python安装目录下)\
      libs目录(python安装目录下)\
     
Lib.zip(python安装目录下的Lib目录，将其打包为zip文件，可以减少文件数目)\
      main.py(需要运行的文件)\
2.创建run.bat文件\
---------------------------------------------------------------------\
     set PYTHONPATH=".;.\Lib.zip;.\DLLs;.\libs"\
     .\python.exe main.py %*\
---------------------------------------------------------------------\
3.使用run.bat就可以直接运行main.py文件，并可以传递参数。&lt;/p&gt;</summary></entry><entry><title>Windows Server 2012 远程桌面无声音</title><link href="/Windows-Server-2012-yuanchengzhuomianwushengyin.html" rel="alternate"></link><published>2013-03-16T05:04:00+08:00</published><author><name>lmatt wang</name></author><id>tag:,2013-03-16:Windows-Server-2012-yuanchengzhuomianwushengyin.html</id><summary type="html">&lt;p&gt;解决方法：\
1.查看远程桌面连接本地客户端中“Options（选项） =&gt; Local
Resource（本地资源） =&gt; Remote audio（远程音频） =&gt; Play on this
computer（在当前电脑播放）"是否被选中。\
2.查看windows server 2012是否开启windows audio service.
可以直接在搜索框中搜索service，打开service管理界面并找到windows
audio服务，确认服务是否开启。&lt;/p&gt;</summary></entry><entry><title>茶叶现象</title><link href="/chayexianxiang.html" rel="alternate"></link><published>2013-03-14T07:58:00+08:00</published><author><name>lmatt wang</name></author><id>tag:,2013-03-14:chayexianxiang.html</id><summary type="html">&lt;div&gt;

       
公司有提供茶叶让员工来泡茶。茶叶存放在一个玻璃罐子中，每天会有阿姨负责将罐子填满。有一天下午我去泡茶，罐子几乎见底，这时突然想到，如果茶叶每天都会剩下，而且阿姨只是把新鲜的茶叶放到上面，那么接近罐子底部的茶叶可能就永远得不到更新。也就是说像我这种来的晚的人，只能喝不新鲜茶叶泡的茶。That's
too bad! 

&lt;/div&gt;

&lt;div&gt;

       
 也许阿姨每天都将剩余的茶叶倒掉了；也许阿姨会把前一天剩下的放到最上面来。

&lt;/div&gt;</summary></entry><entry><title>老外用图片总结的程序员生活</title><link href="/laowaiyongtupianzongjiedechengxuyuanshenghuo.html" rel="alternate"></link><published>2013-03-12T01:47:00+08:00</published><author><name>lmatt wang</name></author><id>tag:,2013-03-12:laowaiyongtupianzongjiedechengxuyuanshenghuo.html</id><summary type="html">&lt;p&gt;链接地址：\
&lt;a href="http://martinvalasek.com/blog/pictures-from-a-developers-life"&gt;http://martinvalasek.com/blog/pictures-from-a-developers-life&lt;/a&gt;&lt;/p&gt;</summary></entry><entry><title>矩阵转置问题</title><link href="/juzhenzhuanzhiwenti.html" rel="alternate"></link><published>2011-07-13T08:17:00+08:00</published><author><name>lmatt wang</name></author><id>tag:,2011-07-13:juzhenzhuanzhiwenti.html</id><summary type="html">&lt;p&gt;如果可以使用额外空间，编程实现矩阵转置是十分简单的，这里就不再做过多的讨论。如何在不使用额外空间的条件下转置矩阵呢？下面会分两种情况来进行讨论。\
&lt;strong&gt;1.方阵的转置&lt;/strong&gt;\
方阵是N*N的矩阵，通过交换m[i][j]与m[j][i]的值，就可以实现方阵的转置。\
&lt;strong&gt;2.非方阵的转置&lt;/strong&gt;\
假设有N*M的矩阵，其中N!=M，怎么来实现&lt;a href="http://en.wikipedia.org/wiki/In-place_matrix_transposition"&gt;in-place的transposition&lt;/a&gt;呢？\
考虑有如下的矩阵\
|1,2|\
|3,4|\
|5,6|\
该矩阵在内存中是按[1,2,3,4,5,6]的顺序存放。\
转置之后则有\
|1,3,5|\
|2,4,6|\
该矩阵在内存中是按[1,3,5,2,4,6]的顺序存放。\
2，3，5，4这四个数的位置绕着一个环进行了一位旋转，1和6则保持位置不变。\
按照这样的思路，可以把矩阵分为多个环，然后将环进行旋转，最后就可以得到转置的矩阵。但这里存在一个问题，如何把矩阵分成多个环？貌似没有很直接的方法算出来。&lt;/p&gt;
&lt;p _="\
 " _int=" int" tobe="tobe"&gt;(1)\
for(int i = 0; i \&amp;lt; m * n; i++)\&lt;/p&gt;
&lt;p&gt;(2)\
先转置正方形中的元素，再将其他的元素移位过去。&lt;/p&gt;
&lt;p&gt;(3)\
只移位一次的算法，好像需要额外的空间。待进一步研究。&lt;/p&gt;</summary></entry><entry><title>购入一kindle 3</title><link href="/gouruyikindle-3.html" rel="alternate"></link><published>2011-02-18T16:16:00+08:00</published><author><name>lmatt wang</name></author><id>tag:,2011-02-18:gouruyikindle-3.html</id><summary type="html">&lt;p&gt;兔年考虑购入一台电纸书，经过一段时间的比较，最终选择了kindle
3（觉得其性价比很高，相比国内产品价格也不存在劣势）。在淘宝上找的商家，去现场提的货，就在鼎好二期地下一层。\
 btw：那个商家的销售小姐很漂亮。\
&lt;img alt="kindle
3" src="https://lh6.googleusercontent.com/_PLnhebJKFVU/TV6PK8_87YI/AAAAAAAAAHg/T-GsEv_kgws/s640/DSC02495.JPG" /&gt;\&lt;/p&gt;
&lt;p&gt;货拿到手后，迫不及待地开始使用。kindle十分轻薄，e-ink屏幕很有纸张的感觉，看起来十分舒服。略感遗憾的是kindle3的屏幕较小，影响pdf的阅读。中文在kindle原生的系统上经常出现“口”，十分影响阅读。为了让kindle更好地支持中文，安装了“&lt;a href="http://www.duokan.com/forum/index.php"&gt;多看&lt;/a&gt;”系统。“多看”系统不仅可以更好地支持中文，还提供了许多实用的功能，并且与原生系统互不影响。以后有时间研究下“多看”系统，看其是如何对kindle进行破解的。上周Amazon出了kindle
3的新版本（version
3.1），据说对中文更加友好。但考虑到3.1是预览版，就没有进行升级，期待正式版的放出。\
&lt;img alt="kindle
3" src="https://lh3.googleusercontent.com/_PLnhebJKFVU/TV6PTBAA76I/AAAAAAAAAHo/uid8m8sqK48/s640/DSC02496.JPG" /&gt;\
&lt;img alt="kindle
3电源线" src="https://lh4.googleusercontent.com/_PLnhebJKFVU/TV6PZHmpIhI/AAAAAAAAAHs/0bH6gTKpFxI/s640/DSC02499.JPG" /&gt;&lt;/p&gt;</summary></entry><entry><title>Hash table</title><link href="/Hash-table.html" rel="alternate"></link><published>2010-11-28T15:39:00+08:00</published><author><name>lmatt wang</name></author><id>tag:,2010-11-28:Hash-table.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;Hash
table定义&lt;/strong&gt;(摘自&lt;a href="http://en.wikipedia.org/wiki/Hash_table"&gt;wikidpedia&lt;/a&gt;)\
In computer science, a hash table or hash map is a data structure that
uses a hash function to map identifying values, known as keys (e.g., a
person's name), to their associated values (e.g., their telephone
number).\
hash
table简单来说就是一种数据结构，可以通过一个key来查询对应的value值（一般情况下效率是很高的）。&lt;/p&gt;
&lt;p&gt;记得以前大学时，老师曾出过这样的一道题目：编写程序来统计文本中出现过的字母以及次数。一个很完美的方案（貌似是老师给出的）如下所示：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;int count[26];//不考虑文本中有大写字母的情况
memset(count, 0, sizeof(count));
读取文本中的一个字母c;
int index = c - &amp;#39;a&amp;#39;;
count[index]++;
打印count数组中内容大于0的项；
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这种方案就用到了hash
table，将字母c转为index可以被看作hash函数，变换的过程没有出现冲突（这在其他情况下是很难出现的）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;hash table的实现&lt;/strong&gt;\
考虑下面一个问题，如何快速地查询某个人电话号码。\
&lt;img alt="hash
table" src="http://upload.wikimedia.org/wikipedia/commons/thumb/7/7d/Hash_table_3_1_1_0_1_0_0_SP.svg/500px-Hash_table_3_1_1_0_1_0_0_SP.svg.png" /&gt;\
一种方法是使用&lt;a href="http://en.wikipedia.org/wiki/Trie"&gt;trie&lt;/a&gt;;另外一种就是这里提到的hash
table。\
要实现hash table，首先需要一个hash函数。\
hash函数实现了key到下标的转换。下面是一个简单的hash函数，实现了人名到数组下标的转换。如果是其他类型的key，就需要选择其他的hash函数。好的hash函数能提高hash
table的性能。整数形的key可以采用直接取余数(k%TABLE_SIZE)的方法，或者平方取中法（key平方后取数的中间几个bit）。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;HASHTABLE table[TABLE_SIZE];
int hash_name(char *name)
 {
    unsigned int h = 0;
    unsigned int seed = 131;/* 31 131 1313 13131 131313 etc.. */
    for(int i = 0; name[i]; i++) 
    {
        h += h * seed + name[i];
    }
    return (int)(h % TABLE_SIZE);
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在使用key得到数组下标后，就可以通过这个下标把value（这里是电话号码）存入hash
table中。但需要注意的是，不同的key可能会得到相同下标，这种情况被称为Collision(冲突)。如何解决好Collision(冲突)问题，是hash
table的关键。\
通常处理Collision(冲突)的方法有两类：\
1.open hashing, closed addressing（链地址法）\
将所有下标相同的记录都存储到相同的链表中，而在table中存储链表的起始地址。\
&lt;img alt="chain" src="http://upload.wikimedia.org/wikipedia/commons/thumb/5/5a/Hash_table_5_0_1_1_1_1_0_LL.svg/500px-Hash_table_5_0_1_1_1_1_0_LL.svg.png" /&gt;\
2.closed hashing, open addressing（开放定址法）\
开放定址法则与链地址法不同，在出现冲突后会按照某个特定顺序去找table中下一个空的位置。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;fi = (f(key) + di) % TABLE_SIZE;//f(key)为hash函数，fi为找寻空位置时的序列，di为特定的序列
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;di一般取c1*i + c2 * ( i * i )。i为1,2,3,...k (k \&amp;lt;= TABLE_SIZE - 1)\
当c1=1, c2=0时，称为Linear probing(线性探测)。\
当c2!=0时，称为Quadratic probing(二次探测)。\
在二次探测时，需要注意一点，fi是否能取到所有下标。如果fi不能取到所有下标，就可能会出现无法插入元素的情况。\
如果TABLE_SIZE为2的幂次，c1和c2可以取1/2。如果TABLE_SIZE为大于2的素数，则c1=0,c2=1或c1=1,c2=1或c1=1/2,c2=1/2都是可以的。\
下面是线性探测的一个代码例子。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;bool insert_item(ITEM item)
{
    int hi = hash_name(item.name);
    while(table[hi])//这里假设没有全为0的电话号码
    {
        if(table[hi].phone == item.phone) return false;//已存在，插入失败
        hi++;
        if(hi &amp;gt;= TABLE_SIZE) hi -= TABLE_SIZE;
    }
    table[hi].phone = item.phone;
    table[hi].name = item.name;
    return true;
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;最后是hash table的查询，基本的过程与插入相同。下面是一个简单的代码例子。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;int search_hash(char *key)
{
    int hi = hash_name(key);
    while(table[hi])//这里假设没有全为0的电话号码
    {
        if(table[hi].name == key)
        {
             return table[hi].phone;
        }
        hi++;
        if(hi &amp;gt;= TABLE_SIZE) hi -= TABLE_SIZE;
    }
    return -1;//没有查到
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;上面说明了如何构建hash table与如何查询的过程。在构建hash
table时，需要注意TABLE_SIZE的大小。如果table的load太高，冲突产生的可能性越大，hash
table的性能就越低。一般建议table的load在0.75以下。&lt;/p&gt;</summary></entry><entry><title>最大流与最小割</title><link href="/zuidaliuyuzuixiaoge.html" rel="alternate"></link><published>2010-11-26T17:24:00+08:00</published><author><name>lmatt wang</name></author><id>tag:,2010-11-26:zuidaliuyuzuixiaoge.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;最大流与最小割定义&lt;/strong&gt;（摘自&lt;a href="http://en.wikipedia.org/wiki/Max-flow_min-cut_theorem"&gt;wikipedia&lt;/a&gt;）\
In optimization theory, the max-flow min-cut theorem states that in a
flow network, the maximum amount of flow passing from the source to the
sink is equal to the minimum capacity which when removed in a specific
way from the network causes the situation that no flow can pass from the
source to the sink.\
最大流简单来说就是一个网络图中所能通过的最大流量，而最小割则是切断这个网络图所需的最小代价。\
一般来说，这种网络图都一个源点（source)和一个终点（sink）。见下图（s是源点，t是终点）\
&lt;img alt="max_flow" src="http://upload.wikimedia.org/wikipedia/commons/thumb/9/94/Max_flow.svg/500px-Max_flow.svg.png" /&gt;\
图中，可以算出s到t的最大流量为5，切断s点发出的两条边（当然还有其他的切断方式，但最小代价是5）就能将这个网络完整阻塞。正如定义中说的那样，最大流等于最小割。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如何求最大流（最小割）&lt;/strong&gt;\
最常用的一类算法是&lt;a href="http://en.wikipedia.org/wiki/Ford%E2%80%93Fulkerson_algorithm"&gt;Ford–Fulkerson
algorithm&lt;/a&gt;。\
对于一个G(V,E)来说，定义c(u,v)为u到v的容量，f(u,v)为u到v的流量。对于c(u,v)和f(u,v)来说，有以下几点特性：\
1.f(u,v) \&amp;lt;= c(u,v)；\
2.f(u,v) = -f(u,v)；\
3.对于除掉s与t的任意一点，f(u,v1) + f(u,v2) + ... + f(u, vn) =
0。(v1...vn为V中的所有点）。\
见下面图片的内容，剩余图中有s到t（如s-&gt;a-&gt;c-&gt;d-&gt;t）的路径，这样的路径被称为扩张路径。\
&lt;img alt="" src="https://docs.google.com/drawings/pub?id=1do8gn4LP_K7ZPK1mH1M2q7WGuisZH2S5Or5pv7ryG9Y&amp;amp;w=480&amp;amp;h=360" /&gt;\
&lt;a href="http://en.wikipedia.org/wiki/Ford%E2%80%93Fulkerson_algorithm"&gt;Ford–Fulkerson
algorithm&lt;/a&gt;的核心就是不停地在剩余图中寻找扩张路径，直到不存在扩张路径为止。\
&lt;strong&gt;算法的具体过程&lt;/strong&gt;：\
1.初始化各个边的流量为0，容量为输入值，网络图的最大流量为0；\
2.建立剩余图，转下一步；\
3.判断是否有s到t的扩张路径（bfs或dfs），如有转第4步；否则退出结束；\
4.设扩张路径中的中的最小剩余容量为mc，则将网络图的最大流量值增加mc，并更新扩张路径上的流量值；转第2步。&lt;/p&gt;
&lt;p&gt;以上图为例，第一次找到了s-&gt;a-&gt;b-&gt;t的扩张路径，这条路径上的最小剩余容量为c(a,b)=2，更新s-&gt;a-&gt;b-&gt;t上的每条边的流量值后，变成了上图中的上半部分。与之对应的剩余图就是下半部分图。&lt;/p&gt;
&lt;p&gt;&lt;a href="http://poj.org/problem?id=1459"&gt;poj 1459&lt;/a&gt;就是一道最小割的题目。&lt;/p&gt;</summary></entry><entry><title>二分图最大匹配</title><link href="/erfentuzuidapipei.html" rel="alternate"></link><published>2010-11-23T14:16:00+08:00</published><author><name>lmatt wang</name></author><id>tag:,2010-11-23:erfentuzuidapipei.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;二分图定义&lt;/strong&gt;（摘自wiki）\
In the mathematical field of graph theory, a &lt;a href="http://en.wikipedia.org/wiki/Bipartite_graph"&gt;bipartite
graph&lt;/a&gt; (or bigraph) is a
graph whose vertices can be divided into two disjoint sets U and V such
that every edge connects a vertex in U to one in V; that is, U and V are
independent sets. Equivalently, a bipartite graph is a graph that does
not contain any odd-length cycles.\
简单的说，如果可以将一个无向图的所有顶点分为两个集合（U和V），且任何一条边的两个顶点都不在同一个顶点集合（即一个顶点在U中，另外一个在V中），那么这个图就是二分图。\
下图就是一个二分图的例子\
&lt;img alt="二分图" src="http://upload.wikimedia.org/wikipedia/commons/thumb/e/e8/Simple-bipartite-graph.svg/500px-Simple-bipartite-graph.svg.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;最大匹配定义&lt;/strong&gt;\
假设G=（V，E）是一个二分图，若存在边的集合M属于E，且M中的所有边都没有公共顶点，则称M是G的一个匹配。边数最多的匹配就是最大匹配。\
考虑下面这个问题：\
有男生女生两群人参加一个集体舞会，男生都希望与自己中意的女生跳舞，如何组合才能使man中满意的人数最多？\
为了简单起见，这里设定男生为U集合，女生为V集合，且|U|=|V|=4，编号为1的男生中意1号和2号女生，编号为2的男生中意2号女生，编号为3的男生中意1号和2号女生，编号为4的男生中意3和4号女生。这个例子就是一个二分图最大匹配问题。\
&lt;img alt="" src="https://docs.google.com/drawings/pub?id=1kRoLfuNZdAKaIuqlJjecflbmEsCVUP84aLPOe4pK8Qg&amp;amp;w=480&amp;amp;h=360" /&gt;\
&lt;strong&gt;解决方法：&lt;/strong&gt;\
解决二分图最大匹配问题最常用的就是匈牙利树算法。具体流程如下：\
1.匹配M初始化为空；\
2.如果集合U中存在一个自由的顶点u，转到步骤3；否则，算法结束；\
3.令r是集合U中一个自由顶点，用深度（广度）优先搜索方法，以r为根，构造一个交替路径（匹配边和未匹配边交替的路径）树T；\
4.若T中存在一个扩展路径p（两个端点都是未覆盖点的交替路径（&lt;strong&gt;谢谢ccyjava指出错误&lt;/strong&gt;）），更新匹配M；转到步骤2。\
以上面的问题为例：\
&lt;img alt="" src="https://docs.google.com/drawings/pub?id=1xaXxZ7MS1wMPnu8tEOuueaXGQH6iPcjTPBmlgfEFzSc&amp;amp;w=480&amp;amp;h=360" /&gt;\
从b1点开始深度搜索，b1-&gt;g1是一条扩展路径。\
&lt;img alt="" src="https://docs.google.com/drawings/pub?id=1uv1wieaKxpQYYzcQw2xF2tRIlDWslcdJS_KhbU2gios&amp;amp;w=480&amp;amp;h=360" /&gt;\
从b2点开始深度搜索，b2-&gt;g1-&gt;b1-&gt;g2是一条扩展路径\
&lt;img alt="" src="https://docs.google.com/drawings/pub?id=1uv1wieaKxpQYYzcQw2xF2tRIlDWslcdJS_KhbU2gios&amp;amp;w=480&amp;amp;h=360" /&gt;\
从b3开始深度搜索，没有扩展路径\
&lt;img alt="" src="https://docs.google.com/drawings/pub?id=1btWPc99OxDvZpqOTsJAoLH5Y-YYSP5uG8uNdrMME3Po&amp;amp;w=480&amp;amp;h=360" /&gt;\
从b4开始深度搜索，b4-&gt;g3是一条扩展路径。&lt;/p&gt;
&lt;p&gt;
[poj1469](http://poj.org/problem?id=1469)是一个二分图最大匹配问题，下面是一个代码实例。\

&lt;script src="https://gist.github.com/711819.js?file=courses_1469.cpp"&gt;&lt;/script&gt;
&lt;/p&gt;</summary></entry><entry><title>python解析html</title><link href="/pythonjiexihtml.html" rel="alternate"></link><published>2010-11-10T15:03:00+08:00</published><author><name>lmatt wang</name></author><id>tag:,2010-11-10:pythonjiexihtml.html</id><summary type="html">&lt;p&gt;
python自带有一个html的解析库，但这个库的功能有限，而且对网页中异常情况的处理不好。\
后来在网上找到一个叫[BeautifulSoup](http://www.crummy.com/software/BeautifulSoup/)的网页解析库，这个库利用了正则表达式对网页进行处理，能比较完美地处理异常情况，还支持unicode。\
除此之外还有lxml等python库。\
下面是BeautifulSoup的一些例子，是从官网摘过来的。更多详细信息可以看[官方文档](http://www.crummy.com/software/BeautifulSoup/documentation.html)，有[中文版](http://www.crummy.com/software/BeautifulSoup/documentation.zh.html)\
&lt;script src="https://gist.github.com/670947.js?file=BeautifulSoup.py"&gt;&lt;/script&gt;
&lt;/p&gt;</summary></entry><entry><title>判断两个路径（文件或文件夹）所指的内容是否相同</title><link href="/panduanlianggelujingwenjianhuowenjianjiasuozhideneirongshifouxiangtong.html" rel="alternate"></link><published>2010-10-25T14:40:00+08:00</published><author><name>lmatt wang</name></author><id>tag:,2010-10-25:panduanlianggelujingwenjianhuowenjianjiasuozhideneirongshifouxiangtong.html</id><summary type="html">&lt;p&gt;思路：\
1.判断文件是否都存在\
2.判断类型是否相同（是否都是文件夹，是否都是文件）\
3.如果是文件， 比较文件的二进制内容\
4.如果是文件夹：\
4.1 列出文件夹下的所有文件，并按文件名排序\
4.2 依次递归比较所有文件&lt;/p&gt;
&lt;p&gt;
代码：\

&lt;script src="http://gist.github.com/646594.js?file=compare_file.cpp"&gt;&lt;/script&gt;
&lt;/p&gt;</summary></entry><entry><title>python实现daemon程序</title><link href="/pythonshixiandaemonchengxu.html" rel="alternate"></link><published>2010-10-21T12:39:00+08:00</published><author><name>lmatt wang</name></author><id>tag:,2010-10-21:pythonshixiandaemonchengxu.html</id><summary type="html">&lt;p&gt;为了实现python程序的daemon运行，找到了如下的代码。通过继承这个类，就能实现daemon程序。\
除此之外还可以用screen，或nohup来实现。\
代码出处：http://www.jejik.com/articles/2007/02/a_simple_unix_linux_daemon_in_python/&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;atexit&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;signal&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;SIGTERM&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Daemon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;   A generic daemon class.&lt;/span&gt;

&lt;span class="sd"&gt; Usage: subclass the Daemon class and override the run() method&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
   &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pidfile&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/dev/null&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/dev/null&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/dev/null&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
       &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;stdin&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;stdout&lt;/span&gt;
      &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stderr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;stderr&lt;/span&gt;
      &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pidfile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pidfile&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;daemonize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
      &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;       do the UNIX double-fork magic, see Stevens&amp;#39; &amp;quot;Advanced&lt;/span&gt;
&lt;span class="sd"&gt;     Programming in the UNIX Environment&amp;quot; for details (ISBN 0201563177)&lt;/span&gt;
&lt;span class="sd"&gt;        http://www.erlenstar.demon.co.uk/unix/faq_2.html#SEC16&lt;/span&gt;
&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
       &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
          &lt;span class="n"&gt;pid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fork&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
           &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;pid&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
               &lt;span class="c1"&gt;# exit first parent&lt;/span&gt;
               &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
       &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;OSError&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;fork #1 failed: &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt; (&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;)&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;errno&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strerror&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
         &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

     &lt;span class="c1"&gt;# decouple from parent environment&lt;/span&gt;
                &lt;span class="c1"&gt;#can remove os.chdir(&amp;quot;/&amp;quot;), lmatt&lt;/span&gt;
      &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;chdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setsid&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
       &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;umask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

     &lt;span class="c1"&gt;# do second fork&lt;/span&gt;
      &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
          &lt;span class="n"&gt;pid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fork&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
           &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;pid&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
               &lt;span class="c1"&gt;# exit from second parent&lt;/span&gt;
             &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
       &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;OSError&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;fork #2 failed: &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt; (&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;)&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;errno&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strerror&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
         &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

     &lt;span class="c1"&gt;# redirect standard file descriptors&lt;/span&gt;
      &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flush&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flush&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;si&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;so&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;a+&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;se&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;a+&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
       &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dup2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;si&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fileno&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fileno&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
      &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dup2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fileno&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fileno&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
     &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dup2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;se&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fileno&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fileno&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

       &lt;span class="c1"&gt;# write pidfile&lt;/span&gt;
       &lt;span class="n"&gt;atexit&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;delpid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;pid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getpid&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
        &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pidfile&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;w+&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;pid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

 &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;delpid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
     &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pidfile&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

 &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;start&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
      &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;       Start the daemon&lt;/span&gt;
&lt;span class="sd"&gt;      &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
       &lt;span class="c1"&gt;# Check for a pidfile to see if the daemon already runs&lt;/span&gt;
       &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
          &lt;span class="n"&gt;pf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pidfile&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
           &lt;span class="n"&gt;pid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
          &lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;IOError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
           &lt;span class="n"&gt;pid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;

      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;pid&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
           &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;pidfile &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt; already exist. Daemon already running?&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
           &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pidfile&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
          &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

     &lt;span class="c1"&gt;# Start the daemon&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;daemonize&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
      &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
       &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;       Stop the daemon&lt;/span&gt;
&lt;span class="sd"&gt;       &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
       &lt;span class="c1"&gt;# Get the pid from the pidfile&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
          &lt;span class="n"&gt;pf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pidfile&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
           &lt;span class="n"&gt;pid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
          &lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;IOError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
           &lt;span class="n"&gt;pid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;

      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;pid&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
           &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;pidfile &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt; does not exist. Daemon not running?&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
          &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pidfile&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
          &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="c1"&gt;# not an error in a restart&lt;/span&gt;

      &lt;span class="c1"&gt;# Try killing the daemon process&lt;/span&gt;
      &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
          &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
              &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;kill&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SIGTERM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
             &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
       &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;OSError&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
          &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;No such process&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
               &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pidfile&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                  &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pidfile&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
           &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
             &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

 &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;restart&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;       Restart the daemon&lt;/span&gt;
&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
       &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
       &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;       You should override this method when you subclass Daemon. It will be called after the process has been&lt;/span&gt;
&lt;span class="sd"&gt;        daemonized by start() or restart().&lt;/span&gt;
&lt;span class="sd"&gt;       &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary></entry><entry><title>获取自增长id（mysql）</title><link href="/huoquzizengchangidmysql.html" rel="alternate"></link><published>2010-10-20T10:40:00+08:00</published><author><name>lmatt wang</name></author><id>tag:,2010-10-20:huoquzizengchangidmysql.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;java&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;PreparedStatement ps =conn.prepareStatement(&amp;quot;insert into table (col) values (?)&amp;quot;, Statement.RETURN_GENERATED_KEYS);
ps.getGeneratedKeys();
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;sql&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;最后插入的id&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;select last_insert_id();
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;下一个id&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;SHOW TABLE STATUS LIKE &amp;quot;table_name&amp;quot;;//auto_increment列
&lt;/pre&gt;&lt;/div&gt;</summary></entry><entry><title>ttserver相关</title><link href="/ttserverxiangguan.html" rel="alternate"></link><published>2010-10-20T10:31:00+08:00</published><author><name>lmatt wang</name></author><id>tag:,2010-10-20:ttserverxiangguan.html</id><summary type="html">&lt;p&gt;ttserver在32位机器上支持超过4g的数据库,编译时加上如下的选项：\
--enbale-off64&lt;/p&gt;</summary></entry><entry><title>当前目录和程序所在目录</title><link href="/dangqianmuluhechengxusuozaimulu.html" rel="alternate"></link><published>2010-10-20T10:19:00+08:00</published><author><name>lmatt wang</name></author><id>tag:,2010-10-20:dangqianmuluhechengxusuozaimulu.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;1.python&lt;/strong&gt;\
当前目录：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getcwd&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;程序所在目录：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="c1"&gt;#os.path.split( os.path.realpath( sys.argv[0] ) )[0]&lt;/span&gt;
&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;realpath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__file__&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;2.vc/mfc&lt;/strong&gt;\
当前目录:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;TCHAR path[MAX_PATH];
GetCurrentDirectory(path, MAX_PATH);
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;程序所在目录:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;TCHAR path[MAX_PATH];
GetModuleFileName(NULL, path, MAX_PATH);
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;3.c/c++(linux)&lt;/strong&gt;\
当前目录:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;MAX_PATH&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt; direct.h &amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="n"&gt;getcwd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_MAX_PATH&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;程序所在目录:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt; stdio.h &amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt; unistd.h &amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;256&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="n"&gt;readlink&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/proc/self/exe&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;------------------------------------------------------------------&lt;/span&gt;
&lt;span class="nl"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

&lt;span class="nl"&gt;Linux&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;proc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pid&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;exe&lt;/span&gt;

&lt;span class="nl"&gt;Solaris&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;proc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pid&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;object&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="n"&gt;only&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;proc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pid&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;complete&lt;/span&gt; &lt;span class="n"&gt;pathname&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;BSD&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;maybe&lt;/span&gt; &lt;span class="n"&gt;Darwing&lt;/span&gt; &lt;span class="n"&gt;too&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;proc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pid&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;
&lt;span class="o"&gt;----------------------------------------------------------------&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;4.java&lt;/strong&gt;\
当前目录:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;String curDir = System.getProperty(&amp;quot;user.dir&amp;quot;); 
//String currentDir = new File(&amp;quot;.&amp;quot;).getAbsolutePath();
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;程序所在目录:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ClassName.class.getResource(&amp;quot;ClassName.class&amp;quot;).getPath();
//jsp
//getServletContext().getRealPath(&amp;quot;/&amp;quot;);
&lt;/pre&gt;&lt;/div&gt;</summary></entry><entry><title>确保FileOutputStream将内容写入硬盘</title><link href="/quebaoFileOutputStreamjiangneirongxieruyingpan.html" rel="alternate"></link><published>2010-10-14T12:51:00+08:00</published><author><name>lmatt wang</name></author><id>tag:,2010-10-14:quebaoFileOutputStreamjiangneirongxieruyingpan.html</id><summary type="html">&lt;p&gt;最近写了一个程序，需要在数据写入文件后立即读取该文件内容。这一简单的功能，却会时不时抛异常，令我十分不解。&lt;/p&gt;
&lt;p&gt;原程序如下：\&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FileOutputStream os = new FileOutputStream("some_file");\
os.write(data);\
os.close();
&lt;/p&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在查了jdk中关于flush()函数的介绍后，发现了一些问题。flush只保证数据已交付给了操作系统，无法确定已写入硬盘。&lt;/p&gt;
&lt;p&gt;以下是jdk中关于flush()函数的介绍：\&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Flushes this output stream and forces any buffered output bytes to be
written out. The general contract of &lt;code&gt;flush&lt;/code&gt; is that calling it is an
indication that, if any bytes previously written have been buffered by
the implementation of the output stream, such bytes should immediately
be written to their intended destination.
&lt;/p&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在查看了一些资料后，找到如下的解决方法。\&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;//在flush();后加上下面代码\
FileDescriptor fd = os.getFD();\
fd.sync();//Force all system buffers to synchronize with the
underlying device.
&lt;/p&gt;&lt;/p&gt;
&lt;/blockquote&gt;</summary></entry><entry><title>路由器的一些配置命令</title><link href="/luyouqideyixiepeizhimingling.html" rel="alternate"></link><published>2010-06-30T16:55:00+08:00</published><author><name>lmatt wang</name></author><id>tag:,2010-06-30:luyouqideyixiepeizhimingling.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;//enter admin&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;enable&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;//begine configure&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;configure terminal&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;//interface  fast.. configure&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;-Interface F.. 0/0(0/1)&lt;/p&gt;
&lt;p&gt;--ip address a.b.c.d ma.mb.mc.md&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;//tunnel configure&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;-Interface T.. number(数字）&lt;/p&gt;
&lt;p&gt;--tunnel source ip&lt;/p&gt;
&lt;p&gt;--tunnel dest.. ip&lt;/p&gt;
&lt;p&gt;--ip address a.b.c.d ma.mb.mc.md&lt;/p&gt;
&lt;p&gt;--ip ospf network point-to-point&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;//ospf configure&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;-router ospf number(数字)&lt;/p&gt;
&lt;p&gt;--network a.b.c.d ma.mb.mc.md area number(数字）&lt;/p&gt;
&lt;p&gt;--passive..&lt;/p&gt;
&lt;p&gt;--redis.. bgp id(数字) subnets&lt;/p&gt;
&lt;p&gt;--router-id(maybe)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;//bgp configure&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;-router bgp id(数字)&lt;/p&gt;
&lt;p&gt;--neighbor ip remote-as as_id&lt;/p&gt;
&lt;p&gt;--redis.. ospf number(数字)&lt;/p&gt;
&lt;p&gt;--router-id(maybe)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;//exit&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;exit&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;//save configure&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;wr&lt;/p&gt;</summary></entry><entry><title>读取jar文件中的资源</title><link href="/duqujarwenjianzhongdeziyuan.html" rel="alternate"></link><published>2010-06-30T16:43:00+08:00</published><author><name>lmatt wang</name></author><id>tag:,2010-06-30:duqujarwenjianzhongdeziyuan.html</id><summary type="html">&lt;p&gt;在前面一篇文中，生成仪表盘时使用了背景图片和指针图片，如果将这些图片（资源）和代码打包到一个jar文件中，读取的时候需要注意一下路径问题。&lt;/p&gt;
&lt;p&gt;打包后路径如下图所示：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ict\&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;--Dashboard.java\&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;image\&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-bg.png\&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-pointer.png&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;如需在Dashboard.java中读取bg.png和pointer.png资源，可以使用如下的代码：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;this.getClass().getClassLoader().getResourceAsStream(&amp;quot;images/bg.png&amp;quot;);
this.getClass().getClassLoader().getResourceAsStream(&amp;quot;images/pointer.png&amp;quot;);
&lt;/pre&gt;&lt;/div&gt;</summary></entry><entry><title>vlc中文字幕乱码(linux下)</title><link href="/vlczhongwenzimuluanma(linuxxia).html" rel="alternate"></link><published>2010-06-30T16:01:00+08:00</published><author><name>lmatt wang</name></author><id>tag:,2010-06-30:vlczhongwenzimuluanma(linuxxia).html</id><summary type="html">&lt;p&gt;仅仅为了记录...&lt;/p&gt;
&lt;p&gt;版本 :   vlc 1.0.5\
设置：coding gb 选上\
format 去掉\
utf-8 auto detect 去掉\
中文字体选择&lt;/p&gt;</summary></entry><entry><title>wchar_t相关的一些</title><link href="/wchar_txiangguandeyixie.html" rel="alternate"></link><published>2010-06-30T15:54:00+08:00</published><author><name>lmatt wang</name></author><id>tag:,2010-06-30:wchar_txiangguandeyixie.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;1.单个宽字符的相关函数&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;wctomb&lt;/strong&gt; 将wchar_t字符变成多字节表示&lt;/p&gt;
&lt;p&gt;[codesyntax lang="cpp"]&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wchar_t ch = L&amp;#39;中&amp;#39;;
char mb[MB_CUR_MAX];
int len = wctomb(mb, ch);//成功则返回的值大于0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;[/codesyntax]&lt;/p&gt;
&lt;p&gt;与wctomb类似有&lt;a href="http://www.cplusplus.com/reference/clibrary/cstdlib/mbtowc/"&gt;int mbtowc ( wchar_t * pwc, const char * pmb, size_t
max );&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.宽字符串的相关函数&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;wcstombs&lt;/strong&gt;将一个wchar_t数组转为多字节表示&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;size_t wcstombs ( char * mbstr, const wchar_t * wcstr, size_t max );
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;其中max是mbstr的最大长度。\
与mbstowcs相反的是size_t mbstowcs ( wchar_t * wcstr, const char *
mbstr, size_t max );（max也是mbstr的长度）&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;&lt;/p&gt;
&lt;p&gt;重要的备注&lt;/strong&gt;&lt;/span&gt;\
以上的函数都与系统的locale相关，在执行前需要调用如下函数，否则可能执行失败。&lt;/p&gt;
&lt;p&gt;[codesyntax lang="cpp"]&lt;/p&gt;
&lt;p&gt;setlocale(LC_ALL, "")&lt;/p&gt;
&lt;p&gt;[/codesyntax]&lt;/p&gt;
&lt;p&gt;这个函数除了以上的功能外，在用ifstream读入含有宽字符的文件时也需要使用。这个函数的具体作用需要以后继续了解。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;不那么重要的备注&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;以上的函数在linux下用的比较多，而在mfc下常用的是另外一些，需要在其他的文中介绍。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;//wcout, wcin, wstring&lt;/p&gt;</summary></entry><entry><title>java 生成图片（仪表盘）</title><link href="/java-shengchengtupianyibiaopan.html" rel="alternate"></link><published>2010-06-29T16:56:00+08:00</published><author><name>lmatt wang</name></author><id>tag:,2010-06-29:java-shengchengtupianyibiaopan.html</id><summary type="html">&lt;p&gt;[codesyntax lang="java"]&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;package&lt;/span&gt; &lt;span class="n"&gt;ict&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dashboard&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.awt.&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.awt.image.&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.io.&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;javax.imageio.&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.awt.font.FontRenderContext&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.awt.geom.Rectangle2D&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Dashboard&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="n"&gt;static&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;generateImage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;OutputStream&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;double&lt;/span&gt; &lt;span class="n"&gt;percent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;

        &lt;span class="o"&gt;//&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;BufferedImage&lt;/span&gt; &lt;span class="n"&gt;canvas&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;BufferedImage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;radius&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;radius&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;BufferedImage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TYPE_4BYTE_ABGR&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;Graphics2D&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Graphics2D&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;canvas&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;createGraphics&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;Graphics2D用于画图&lt;/span&gt;
            &lt;span class="n"&gt;BufferedImage&lt;/span&gt; &lt;span class="n"&gt;bg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ImageIO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;File&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;./image/bg.png&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="err"&gt;仪表盘背景&lt;/span&gt;
            &lt;span class="n"&gt;BufferedImage&lt;/span&gt; &lt;span class="n"&gt;pointer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ImageIO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;File&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;./image/pointer.png&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="err"&gt;仪表盘指针&lt;/span&gt;

            &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;pw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pointer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getWidth&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;ph&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pointer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getHeight&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

            &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drawImage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;radius&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;radius&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;percent&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;percent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;percent&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;percent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;double&lt;/span&gt; &lt;span class="n"&gt;arc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PI&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mf"&gt;6.0&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;percent&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;360&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;Math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PI&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

            &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="err"&gt;旋转&lt;/span&gt;
            &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drawImage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;radius&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;pw&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;radius&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;arc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;ps&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;valueOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;percent&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ps&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;ps&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ps&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;substring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="err"&gt;截断字符串&lt;/span&gt;
            &lt;span class="n"&gt;FontRenderContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getFontRenderContext&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="n"&gt;Font&lt;/span&gt; &lt;span class="n"&gt;font&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Font&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Serif&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Font&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BOLD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;Rectangle2D&lt;/span&gt; &lt;span class="n"&gt;bounds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getStringBounds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ps&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="err"&gt;获取字符串边界信息，如长、宽等&lt;/span&gt;
            &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setColor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WHITE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fillRect&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="n"&gt;radius&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;bounds&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getWidth&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="n"&gt;radius&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;bounds&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getHeight&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;bounds&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getWidth&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;bounds&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getHeight&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setColor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BLACK&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setFont&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="err"&gt;字体设置&lt;/span&gt;
            &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drawString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ps&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="n"&gt;radius&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;bounds&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getWidth&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="n"&gt;radius&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;bounds&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getHeight&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;bounds&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getY&lt;/span&gt;&lt;span class="p"&gt;()));&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="err"&gt;显示比率&lt;/span&gt;

            &lt;span class="n"&gt;ImageIO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;png&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="err"&gt;生成图片到&lt;/span&gt;&lt;span class="n"&gt;outputstream&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ne"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;ex&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;

            &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;generate image error!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ex&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="n"&gt;static&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;throws&lt;/span&gt; &lt;span class="ne"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;

&lt;span class="o"&gt;//-&lt;/span&gt;&lt;span class="mf"&gt;10.0&lt;/span&gt;&lt;span class="err"&gt;到&lt;/span&gt;&lt;span class="mi"&gt;370&lt;/span&gt;&lt;span class="err"&gt;度的测试&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;double&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;10.0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mf"&gt;370.1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mf"&gt;10.0&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;

            &lt;span class="n"&gt;FileOutputStream&lt;/span&gt; &lt;span class="n"&gt;fos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;FileOutputStream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;File&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;./&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;.png&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
            &lt;span class="n"&gt;generateImage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mf"&gt;360.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;fos&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;[/codesyntax]&lt;/p&gt;</summary></entry><entry><title>路由器配置备份与恢复（转载）</title><link href="/luyouqipeizhibeifenyuhuifuzhuanzai.html" rel="alternate"></link><published>2010-06-28T03:02:00+08:00</published><author><name>lmatt wang</name></author><id>tag:,2010-06-28:luyouqipeizhibeifenyuhuifuzhuanzai.html</id><summary type="html">&lt;h2&gt;&lt;a name="intro"&gt;Introduction&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Routers often get upgraded or swapped out for a number of reasons. This
document provides the user with some basic steps to migrate the
configuration from an existing router to a new router.\&lt;/p&gt;
&lt;h2&gt;&lt;a name="prereq"&gt;Prerequisites&lt;/a&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;a name="req"&gt;Requirements&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Before you use the information in this document, make sure that you meet
these requirements:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Access to a Trivial File Transfer Protocol (TFTP) or File Transfer
    Protocol (FTP) server.&lt;/li&gt;
&lt;li&gt;Connectivity - Routers must be able to access the FTP or TFTP
    server. Use the &lt;strong&gt;ping&lt;/strong&gt; command to verify connectivity.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a name="hw"&gt;Components Used&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This document is not restricted to specific software and hardware
versions.&lt;/p&gt;
&lt;p&gt;The information in this document was created from the devices in a
specific lab environment. All of the devices used in this document
started with a cleared (default) configuration. If your network is live,
make sure that you understand the potential impact of any command.\&lt;/p&gt;
&lt;h3&gt;&lt;a name="conventions"&gt;Conventions&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Refer to &lt;a href="http://www.cisco.com/en/US/tech/tk801/tk36/technologies_tech_note09186a0080121ac5.shtml"&gt;Cisco Technical Tips
Conventions&lt;/a&gt;
for more information on document conventions.\&lt;/p&gt;
&lt;h2&gt;&lt;a name="backup"&gt;Make a Backup of the Configuration&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There are several methods to choose from in order to back up and restore
a configuration:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.cisco.com/en/US/products/sw/iosswrel/ps1835/products_tech_note09186a008020260d.shtml#tftp"&gt;Use a TFTP
    server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cisco.com/en/US/products/sw/iosswrel/ps1835/products_tech_note09186a008020260d.shtml#ftp"&gt;Use an FTP
    server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cisco.com/en/US/products/sw/iosswrel/ps1835/products_tech_note09186a008020260d.shtml#em-prog"&gt;Use a Terminal Emulation
    Program&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cisco.com/en/US/products/sw/iosswrel/ps1835/products_tech_note09186a008020260d.shtml#ab"&gt;Automatic Backup of Configuration using the Kron
    Method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cisco.com/en/US/products/sw/iosswrel/ps1835/products_tech_note09186a008020260d.shtml#bcb"&gt;Backup Configuration to a TFTP
    Server&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a name="tftp"&gt;Use a TFTP Server to Backup and Restore a Configuration&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This is a step-by-step approach to copy a configuration from a router to
a TFTP server, and back to another router. Before you proceed with this
method, make sure you have a TFTP server on the network to which you
have IP connectivity.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;At the &lt;code&gt;Router&amp;gt;&lt;/code&gt; prompt, issue the &lt;strong&gt;enable&lt;/strong&gt; command, and provide
    the required password when prompted.
    &lt;/p&gt;
    &lt;p&gt;
    The prompt changes to &lt;code&gt;Router#&lt;/code&gt;, which indicates that the router is
    now in privileged mode.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Copy the running configuration file to the TFTP server:\&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;CE_2#copy running-config tftp:
Address or name of remote host []? 64.104.207.171
Destination filename [ce_2-confg]? backup_cfg_for_my_router
!!
1030 bytes copied in 2.489 secs (395 bytes/sec)
CE_2#
&lt;/pre&gt;&lt;/div&gt;


&lt;/blockquote&gt;
&lt;p&gt;&lt;p&gt;
3.  Open the configuration file with a text editor. Search for and
remove any line that starts with "AAA".
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Note:&lt;/strong&gt; This step is to remove any security commands that can lock
you out of the router.
4.  Copy the configuration file from the TFTP server to a new router in
privileged (enable) mode which has a basic configuration.\&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Router#copy tftp: running-config
Address or name of remote host []? 64.104.207.171
Source filename []? backup_cfg_for_my_router
Destination filename [running-config]?
Accessing tftp://10.66.64.10/backup_cfg_for_my_router...
Loading backup_cfg_for_router from 64.104.207.171 (via FastEthernet0/0): !
[OK - 1030 bytes]

1030 bytes copied in 9.612 secs (107 bytes/sec)
CE_2#
&lt;/pre&gt;&lt;/div&gt;


&lt;/blockquote&gt;
&lt;p&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a name="ftp"&gt;Use an FTP Server to Backup and Restore a Configuration&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In this procedure, an FTP server can be used in place of a TFTP server.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;At the &lt;code&gt;Router&amp;gt;&lt;/code&gt; prompt, issue the &lt;strong&gt;enable&lt;/strong&gt; command, and provide
    the required password when prompted.
    &lt;/p&gt;
    &lt;p&gt;
    The prompt changes to &lt;code&gt;Router#&lt;/code&gt;, which indicates that the router is
    now in privileged mode.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configure the FTP username and password.\&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;CE_2#config terminal
CE_2(config)#ip ftp username cisco
CE_2(config)#ip ftp password cisco123
CE_2(config)#end
CE_2#
&lt;/pre&gt;&lt;/div&gt;


&lt;/blockquote&gt;
&lt;p&gt;&lt;p&gt;
3.  Copy the configuration to the FTP server.\&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;CE_2#copy running-config ftp:
Address or name of remote host []? 10.66.64.10
Destination filename [ce_2-confg]? backup_cfg_for_router
Writing backup_cfg_for_router !
1030 bytes copied in 3.341 secs (308 bytes/sec)
CE_2#
&lt;/pre&gt;&lt;/div&gt;


&lt;/blockquote&gt;
&lt;p&gt;&lt;p&gt;
4.  Open the configuration file with a text editor. Search for and
remove any line that starts with "AAA".
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Note:&lt;/strong&gt; This step is to remove any security commands that can lock
you out of the router.
5.  Copy the configuration file from the FTP server to a router in
privileged (enable) mode which has a basic configuration.\&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Router#copy ftp: running-config
Address or name of remote host [10.66.64.10]?
Source filename [backup_cfg_for_router]?
Destination filename [running-config]?
Accessing ftp://10.66.64.10/backup_cfg_for_router...
Loading backup_cfg_for_router !
[OK - 1030/4096 bytes]
1030 bytes copied in 13.213 secs (78 bytes/sec)
CE_2#
&lt;/pre&gt;&lt;/div&gt;


&lt;/blockquote&gt;
&lt;p&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a name="em-prog"&gt;Use a Terminal Emulation Program to Backup and Restore a Configuration&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;A terminal emualation program can be used to back up and restore a
configuration. This is a description of the procedure using Microsoft
Hyperterminal Terminal Emulation software:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;If the configuration needs to be copied from another router, connect
    to that router through the console or Telnet.&lt;/li&gt;
&lt;li&gt;At the &lt;code&gt;Router&amp;gt;&lt;/code&gt; prompt, issue the &lt;strong&gt;enable&lt;/strong&gt; command, and provide
    the required password when prompted.
    &lt;/p&gt;
    &lt;p&gt;
    The prompt changes to &lt;code&gt;Router#&lt;/code&gt;, which indicates that the router is
    now in privileged mode.&lt;/li&gt;
&lt;li&gt;Issue the &lt;strong&gt;terminal length 0&lt;/strong&gt; command in order to force the router
    to return the entire response at once, rather than one screen at a
    time.
    &lt;/p&gt;
    &lt;p&gt;
    This allows you to capture the configuration without extraneous
    &lt;code&gt;--more--&lt;/code&gt; prompts generated when the router responds one screen at
    a time.&lt;/li&gt;
&lt;li&gt;On the HyperTerminal menu, choose &lt;strong&gt;Transfer &gt; Capture Text&lt;/strong&gt;.
    &lt;/p&gt;
    &lt;p&gt;
    The Capture Text window appears.&lt;/li&gt;
&lt;li&gt;Name this file "config.txt."&lt;/li&gt;
&lt;li&gt;Click &lt;strong&gt;Start&lt;/strong&gt; in order to dismiss the Capture Text window and
    begin the capture.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Issue the &lt;strong&gt;show running-config&lt;/strong&gt; command, and allow time for the
    router to complete its response. You will see:\&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Building configuration...
&lt;/pre&gt;&lt;/div&gt;


&lt;/blockquote&gt;
&lt;p&gt;&lt;p&gt;
followed by the configuration.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On the HyperTerminal menu, choose &lt;strong&gt;Transfer &gt; Capture Text &gt;
    Stop&lt;/strong&gt; in order to end the screen capture.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Open the config.txt file you created in any text editor, such as
    Notepad or Wordpad.&lt;/li&gt;
&lt;li&gt;Search for and remove any line that starts with "AAA".
    &lt;/p&gt;
    &lt;p&gt;
    &lt;strong&gt;Note:&lt;/strong&gt; This step is to remove any security commands that could
    lock you out of the router.&lt;/li&gt;
&lt;li&gt;Save the file.&lt;/li&gt;
&lt;li&gt;Connect to the router that needs the configuration.&lt;/li&gt;
&lt;li&gt;Open the config.txt file.&lt;/li&gt;
&lt;li&gt;Highlight the entire contents of the config.txt file.
    &lt;/p&gt;
    &lt;p&gt;
    You can do this by dragging the cursor from before the first
    character to after the last character in the file while holding down
    the left mouse button. Alternatively, if you use Notepad, you can
    choose &lt;strong&gt;Edit &gt; Select All&lt;/strong&gt; from the menu.&lt;/li&gt;
&lt;li&gt;Copy the selected text to the Windows clipboard.
    &lt;/p&gt;
    &lt;p&gt;
    You can either choose &lt;strong&gt;Edit &gt; Copy&lt;/strong&gt; from the text editor menu, or
    hold down the &lt;strong&gt;CTRL&lt;/strong&gt; key and simultaneously press the &lt;strong&gt;C&lt;/strong&gt; key in
    order to perform the copy.&lt;/li&gt;
&lt;li&gt;Switch to the HyperTerminal window, and issue the &lt;strong&gt;configure
    terminal&lt;/strong&gt; command at the &lt;code&gt;Router#&lt;/code&gt; prompt. Then press &lt;strong&gt;Enter&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Paste the configuration file into the router by selecting &lt;strong&gt;Edit &gt;
    Paste to Host&lt;/strong&gt; on the HyperTerminal menu.&lt;/li&gt;
&lt;li&gt;After the configuration has finished pasting and the router brings
    you back to the configuration prompt, issue the &lt;strong&gt;copy
    running-config startup-config&lt;/strong&gt; command in order to write the
    configuration into memory.&lt;/li&gt;
&lt;li&gt;Issue the &lt;strong&gt;exit&lt;/strong&gt; command in order to return to the &lt;code&gt;Router#&lt;/code&gt;
    prompt.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a name="ab"&gt;Automatic Backup of Configuration using the Kron Method&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In order to get a router to copy the running-config to startup-config,
for example every Sunday at 23:00, complete these steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Create a kron policy list&lt;/strong&gt;—This is the script that lists what
    commands the router should run at the scheduled time.\&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Router(config)#kron policy-list SaveConfig

        Router(config-kron-policy)#cli write
        Router(config-kron-policy)#exit
&lt;/pre&gt;&lt;/div&gt;


&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;cli&lt;/strong&gt;—Specifies EXEC CLI commands within a Command Scheduler
    policy list.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Policy-list&lt;/strong&gt;—Specifies the policy list associated with a
    Command Scheduler occurrence.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;p&gt;
&lt;strong&gt;Note:&lt;/strong&gt; The reason why &lt;strong&gt;write&lt;/strong&gt; was used rather than &lt;strong&gt;copy
running-config startup-config&lt;/strong&gt; is because kron does not support
interactive prompts and the &lt;strong&gt;copy running-config startup-config&lt;/strong&gt;
command requires interaction. It is important to remember this when
you create commands. Also, note that kron does not support
configuration commands.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Create a kron occurrence&lt;/strong&gt;—This informs the router when and how
    often the policy should run.\&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Router(config)#kron occurrence SaveConfigSchedule
 at 23:00 Sun recurring
        Router(config-kron-occurrence)#policy-list SaveConfig
&lt;/pre&gt;&lt;/div&gt;


&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;SaveConfigSchedule&lt;/strong&gt;—This is the name of occurrence. Length of
    occurrence-name is from 1 to 31 characters. If the
    occurrence-name is new, an occurrence structure will be created.
    If the occurrence-name is not new, the existing occurrence will
    be edited.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;at&lt;/strong&gt;—Identifies that the occurrence is to run at a specified
    calendar date and time.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;recurring&lt;/strong&gt;—Identifies that the occurrence is to run on a
    recurring basis.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;p&gt;
3.  Verify the kron configuration by using the &lt;strong&gt;show&lt;/strong&gt; command.\&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Router#sh kron schedule
         Kron Occurrence Schedule
         SaveConfigSchedule inactive, will run again in 1 days 12:37:47 at 23:00 on Sun
&lt;/pre&gt;&lt;/div&gt;


&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;inactive&lt;/strong&gt;—Means that kron is not running the command(s) at
    present.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Active&lt;/strong&gt;—Means that kron is running the current command(s).&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Router#show running-configuration
          kron occurrence SaveConfigSchedule at 23:00 Sun recurring
            policy-list SaveConfig
            kron policy-list SaveConfig
            cli write
&lt;/pre&gt;&lt;/div&gt;


&lt;/blockquote&gt;
&lt;p&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a name="bcb"&gt;Backup Configuration to a TFTP Server&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This example is to save the running config to a TFTP server (10.1.1.1)
every Sunday at 23:00:\&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Router(config)#kron policy-list Backup

         Router(config-kron-policy)#cli show run | redirect
   tftp://10.1.1.1/test.cfg
         Router(config-kron-policy)#exit
         !
         Router(config)#kron occurrence Backup at 23:00 Sun recurring
         Router(config-kron-occurrence)#policy-list Backup
&lt;/pre&gt;&lt;/div&gt;


&lt;/blockquote&gt;
&lt;h2&gt;&lt;a name="verify"&gt;Verify&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Use the &lt;strong&gt;show running-config&lt;/strong&gt; command to confirm that the
configuration file has been copied to the destination router.\&lt;/p&gt;
&lt;h2&gt;&lt;a name="NetPro"&gt;Cisco Support Community - Featured Conversations&lt;/a&gt;&lt;/h2&gt;
&lt;!--googleoff: all--&gt;

&lt;p&gt;&lt;a href="https://supportforums.cisco.com/index.jspa"&gt;Cisco Support
Community&lt;/a&gt; is a forum for
you to ask and answer questions, share suggestions, and collaborate with
your peers. Below are just some of the most recent and relevant
conversations happening right now.&lt;/p&gt;</summary></entry><entry><title>gdb的基本使用（持续更新）</title><link href="/gdbdejibenshiyongchixugengxin.html" rel="alternate"></link><published>2010-04-23T03:11:00+08:00</published><author><name>lmatt wang</name></author><id>tag:,2010-04-23:gdbdejibenshiyongchixugengxin.html</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;gcc -g test.c&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;通过-g参数，可以生成gdb所需要的debug信息。可能会生成一些只有gdb才能使用的debug信息，这对其他的debug程序会造成影响。要控制这些特殊的debug信息，可以通过-gstabs+, -gstabs, -gxcoff和-gvms参数。\&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;gdb a.out
&lt;/p&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;通过上条命令，这会启动gdb。之后就可以对a.out进行debug了。&lt;/p&gt;
&lt;p&gt;命令list(可以简写为字母"l")，列出代码。如果list后面没有参数，就是列出“上次列出代码”的后10行代码。"list -"，列出“上次列出代码”的前10行代码.
"list linenumber"列出linenumber附近的10行代码. "list
start,end"列出行号从start到end的代码。&lt;/p&gt;
&lt;p&gt;命令break, 设置断点。break linenumber，在linenumber处设置断点。break
functionname，在函数functionname的入口处出设置断点。&lt;/p&gt;
&lt;p&gt;命令run(可以简写为r），运行程序。&lt;/p&gt;
&lt;p&gt;命令next（可以简写为n)，单步执行。&lt;/p&gt;
&lt;p&gt;命令step（可以简写为s），单步执行，如果遇到函数，就进入函数内部。&lt;/p&gt;
&lt;p&gt;命令continue（可以简写为c)，继续执行程序&lt;/p&gt;
&lt;p&gt;命令print(可以简写为p)，打印参数的值&lt;/p&gt;
&lt;p&gt;直接回车，重复执行上次命令。&lt;/p&gt;
&lt;p&gt;命令quit（可以简写为q），退出gdb。&lt;/p&gt;</summary></entry><entry><title>python中的import</title><link href="/pythonzhongdeimport.html" rel="alternate"></link><published>2010-04-21T14:28:00+08:00</published><author><name>lmatt wang</name></author><id>tag:,2010-04-21:pythonzhongdeimport.html</id><summary type="html">&lt;p&gt;[codesyntax lang="python" lines="fancy"]&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;test1&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pack1.pack2.test1&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;test1&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cla&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mod_name&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.pack&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;test1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;[/codesyntax]&lt;/p&gt;
&lt;p&gt;第一行是python中导入module或者package的普通方式，通过这个语句，在接下来的代码中就可以使用test1
module中所定义的function, class,
var等。这类似C语言中的#include，只是在使用module中的的内容时需要加上"test."前缀（相当于c++中的namespace）。&lt;/p&gt;
&lt;p&gt;第二行同第一行，其中的pack1和pack2都是package，而test1只能是package或module（这与第三行有区别）。&lt;/p&gt;
&lt;p&gt;第三行是从test1
module中导入fun(方法)，cla(类)，mod_name(子模块)。在使用这些被导入的内容时，可以不用使用前缀（不同于第一行内容）。&lt;/p&gt;
&lt;p&gt;第四行是在python2.5以后加入的相对路径（显式的，以前不是）导入。&lt;/p&gt;
&lt;p&gt;import时module的搜索路径。这个路径首先是当前目录（是指包含被运行的python
script的目录），接着是PYTHONPATH（如果定义的话，这就是系统上的环境变量，格式同PATH），最后是python的安装目录（包括一些python库的目录）等。通过sys.path就可以获取该搜索路径。&lt;/p&gt;
&lt;p&gt;“from pack import *”这个语句和java中的“import
pack.*"的含义有所不同。在python中，如果pack
module下的__init__.py中定义了__all__变量（如&lt;span
style="color: #ff0000;"&gt;__all__ = ["echo", "surround",
"reverse"]&lt;/span&gt;）,那么就可以在接下来的代码中直接使用echo,
surround,reverse三个子模块（其他子模块就不行）。而如果没有定义__all__变量，那么仅仅只是引入pack（除非在import *语句前有import其他子模块，这样的子模块也不需要前缀，例子见下面代码）。&lt;/p&gt;
&lt;p&gt;[codesyntax lang="python"]&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pack.test1&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pack&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;

&lt;span class="n"&gt;test1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;test2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;[/codesyntax]&lt;/p&gt;
&lt;p&gt;"from mod_name
import *"这个语句就可以直接调用module中的内容，不需要前缀&lt;/p&gt;
&lt;p&gt;下面内容不太懂，需要实验。这个top-level是最顶层的还是只是上一层的\&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span style="color: #ff0000;"&gt;if the imported module is not found in
the current package (the package of which the current module is a
submodule), the
&lt;a href="http://docs.python.org/reference/simple_stmts.html#import"&gt;import&lt;/a&gt;
statement looks for a top-level module with the given name.&lt;/span&gt;
&lt;/p&gt;&lt;/p&gt;
&lt;/blockquote&gt;</summary></entry><entry><title>web.py在cgi下的install</title><link href="/web.pyzaicgixiadeinstall.html" rel="alternate"></link><published>2010-04-19T16:58:00+08:00</published><author><name>lmatt wang</name></author><id>tag:,2010-04-19:web.pyzaicgixiadeinstall.html</id><summary type="html">&lt;p&gt;由于ixwebhosting下无法安装web.py之类的程序，只能将web.py当作工程的一部分。这需要将web.py下的web目录拷贝到工程目录中，以后只需要import
web就可以使用web.py了。&lt;/p&gt;
&lt;p&gt;web.py可以和Lighttpd,Apache搭配使用。web.py的官网推荐的是使用lighttpd（fastcgi）。这里介绍的是Apache下的CGI方式（这种方式效率不高，不过在ixwebhosting下只能使用这种方式）。&lt;/p&gt;
&lt;p&gt;在.htaccess下添加如下代码：&lt;/p&gt;
&lt;p&gt;[codesyntax lang="apache"]&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Options +ExecCGI
AddHandler cgi-script .py
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;[/codesyntax]&lt;/p&gt;
&lt;p&gt;或者在http.conf（或apache2.conf）下添加如下代码：&lt;/p&gt;
&lt;p&gt;[codesyntax lang="apache"]&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Alias /foo/static/ /path/to/static
ScriptAlias /foo/ /path/to/code.py
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;[/codesyntax]&lt;/p&gt;
&lt;p&gt;上述内容参见于&lt;a href="http://webpy.org/"&gt;web.py&lt;/a&gt;的官网。&lt;/p&gt;
&lt;p&gt;除了作以上配置外，web.py在CGI下运行还需要安装&lt;a href="http://trac.saddi.com/flup"&gt;flup&lt;/a&gt;。同web.py一样，&lt;a href="http://trac.saddi.com/flup"&gt;flup&lt;/a&gt;也存在无法安装的问题。这里同样将flup文件下载解压到工程目录，&lt;span
style="text-decoration: line-through;"&gt;不过需要注意的是需要修改其中的部分代码。由于flup不是安装到机器上，其代码中的部分导入失败，这需要将"import
flup.*"之类的语句去除掉flup。(如果将flup放在web.py的目录下才需要)&lt;/span&gt;\&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;下面引用&lt;a href="http://webpy.org/"&gt;web.py&lt;/a&gt;官网内容：
&lt;/p&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;产品&lt;/h2&gt;
&lt;p&gt;现在所运行 web.py 程序的web服务器是挺不错的，
但绝大多数网站还是需要更加专业一些的web服务器。web.py 实现了
&lt;a href="http://www.python.org/dev/peps/pep-0333/"&gt;WSGI&lt;/a&gt;
并能在任何兼容它的服务器上运行。 WSGI
是一个web服务器与应用程序之间的通用API, 就如Java 的 Servlet 接口。
你需要安装 &lt;a href="http://trac.saddi.com/flup"&gt;flup&lt;/a&gt; (&lt;a href="http://www.saddi.com/software/flup/dist/"&gt;download
here&lt;/a&gt;) 使web.py 支持with CGI，
FastCGI 或 SCGI， flup提供了这些API的WSGI接口。&lt;/p&gt;
&lt;p&gt;对于所有的CGI变量， 添加以下到你的 &lt;code&gt;code.py&lt;/code&gt;:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;并运行 &lt;code&gt;chmod +x code.py&lt;/code&gt; 添加可执行属性。&lt;/p&gt;
&lt;p&gt;&lt;a name="lighttpd"&gt;&lt;/a&gt;\&lt;/p&gt;
&lt;h3&gt;LightTPD&lt;/h3&gt;
&lt;p&gt;&lt;a name="lighttpdfastcgi"&gt;&lt;/a&gt;\&lt;/p&gt;
&lt;h4&gt;.. 使用 FastCGI&lt;/h4&gt;
&lt;p&gt;在产品中通过FastCGI结合lighttpd是web.py使用的一种推荐方法。
&lt;a href="http://reddit.com/"&gt;reddit.com&lt;/a&gt; 通过该方法来处理百万次的点击。&lt;/p&gt;
&lt;p&gt;lighttpd config设置参考如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; server.modules = (&amp;quot;mod_fastcgi&amp;quot;, &amp;quot;mod_rewrite&amp;quot;)
 server.document-root = &amp;quot;/path/to/root/&amp;quot;
 fastcgi.server = ( &amp;quot;/code.py&amp;quot; =&amp;gt;
 (( &amp;quot;socket&amp;quot; =&amp;gt; &amp;quot;/tmp/fastcgi.socket&amp;quot;,
    &amp;quot;bin-path&amp;quot; =&amp;gt; &amp;quot;/path/to/root/code.py&amp;quot;,
    &amp;quot;max-procs&amp;quot; =&amp;gt; 1
 ))
 )

 url.rewrite-once = (
   &amp;quot;^/favicon.ico$&amp;quot; =&amp;gt; &amp;quot;/static/favicon.ico&amp;quot;,
   &amp;quot;^/static/(.*)$&amp;quot; =&amp;gt; &amp;quot;/static/$1&amp;quot;,
   &amp;quot;^/(.*)$&amp;quot; =&amp;gt; &amp;quot;/code.py/$1&amp;quot;
 )
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在某些版本的lighttpd中，
需要保证fastcgi.server选项下的"check-local"属性设置为"false",
特别是当你的 &lt;code&gt;code.py&lt;/code&gt; 不在文档根目录下。&lt;/p&gt;
&lt;p&gt;如果你得到错误显示不能够导入flup， 请在命令行下输入 "easy_install flup"
来安装。&lt;/p&gt;
&lt;p&gt;从修订版本 145开始，
如果你的代码使用了重定向，还需要在fastcgi选项下设置bin-environment变量。
如果你的代码重定向到&lt;a href="http://domain.com/"&gt;http://domain.com/&lt;/a&gt; 而在url栏中你会看到
&lt;a href="http://domain.com/code.py/%EF%BC%8C"&gt;http://domain.com/code.py/，&lt;/a&gt;
你可以通过设置这个环境变量来阻止。 这样你的fastcgi.server设置将会如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;fastcgi.server = ( &amp;quot;/code.py&amp;quot; =&amp;gt;
((
   &amp;quot;socket&amp;quot; =&amp;gt; &amp;quot;/tmp/fastcgi.socket&amp;quot;,
   &amp;quot;bin-path&amp;quot; =&amp;gt; &amp;quot;/path/to/root/code.py&amp;quot;,
   &amp;quot;max-procs&amp;quot; =&amp;gt; 1,
   &amp;quot;bin-environment&amp;quot; =&amp;gt; (
     &amp;quot;REAL_SCRIPT_NAME&amp;quot; =&amp;gt; &amp;quot;&amp;quot;
   ),
   &amp;quot;check-local&amp;quot; =&amp;gt; &amp;quot;disable&amp;quot;
))
)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a name="apache"&gt;&lt;/a&gt;\&lt;/p&gt;
&lt;h3&gt;Apache&lt;/h3&gt;
&lt;p&gt;&lt;a name="apachecgi"&gt;&lt;/a&gt;\&lt;/p&gt;
&lt;h4&gt;.. 使用 CGI&lt;/h4&gt;
&lt;p&gt;添加以下到 &lt;code&gt;httpd.conf&lt;/code&gt; 或 &lt;code&gt;apache2.conf&lt;/code&gt;。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Alias /foo/static/ /path/to/static
ScriptAlias /foo/ /path/to/code.py
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a name="apachecgihtaccess"&gt;&lt;/a&gt;\&lt;/p&gt;
&lt;h4&gt;.. 使用 CGI .htaccess&lt;/h4&gt;
&lt;p&gt;CGI很容易配置， 但不适合高性能网站。 添加以下到你的 &lt;code&gt;.htaccess&lt;/code&gt;：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Options +ExecCGI
AddHandler cgi-script .py
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;将你的浏览器指向 &lt;code&gt;http://example.com/code.py/&lt;/code&gt;。
不要忘记最后的斜杠，否则你将会看到 &lt;code&gt;not found&lt;/code&gt; 消息 (因为在 &lt;code&gt;urls&lt;/code&gt;
列表中你输入的没有被匹配到). 为了让其运行的时候不需要添加 &lt;code&gt;code.py&lt;/code&gt;，
启用mod_rewrite 法则 (查看如下)。&lt;/p&gt;
&lt;p&gt;注意: &lt;code&gt;web.py&lt;/code&gt; 的实现破坏了 &lt;code&gt;cgitb&lt;/code&gt; 模块，因为它截取了 &lt;code&gt;stdout&lt;/code&gt;。
可以通过以下的方法来解决该问题：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;cgitb&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;cgitb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;enable&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;

&lt;span class="c1"&gt;# ... import web etc here...&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;cgidebugerror&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;        &lt;span class="n"&gt;_wrappedstdout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;

    &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;web&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_oldstdout&lt;/span&gt;
    &lt;span class="n"&gt;cgitb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_wrappedstdout&lt;/span&gt;

&lt;span class="n"&gt;web&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;internalerror&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cgidebugerror&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a name="apachefastcgi"&gt;&lt;/a&gt;\&lt;/p&gt;
&lt;h4&gt;.. 使用 FastCGI&lt;/h4&gt;
&lt;p&gt;FastCGI很容易配置，运行方式如同mod_python。&lt;/p&gt;
&lt;p&gt;添加以下到 &lt;code&gt;.htaccess&lt;/code&gt;：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;      SetHandler fastcgi-script
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;不幸的是, 不像lighttpd, Apache不能够暗示你的web.py脚本以FastCGI
服务器的形式工作，因此你需要明确的告诉web.py。 添加以下到 &lt;code&gt;code.py&lt;/code&gt;的
&lt;code&gt;if __name__ == "__main__":&lt;/code&gt; 行前：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;web.wsgi.runwsgi = lambda func, addr=None: web.wsgi.runfcgi(func, addr)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;将你的浏览器指向 &lt;code&gt;http://example.com/code.py/&lt;/code&gt;。
不要忘记最后的斜杠，否则你将会看到 &lt;code&gt;not found&lt;/code&gt; 消息 (因为在 &lt;code&gt;urls&lt;/code&gt;
列表中你输入的没有被匹配到). 为了让其运行的时候不需要添加 &lt;code&gt;code.py&lt;/code&gt;，
启用mod_rewrite 法则 (查看如下)。&lt;/p&gt;
&lt;p&gt;&lt;a href="http://lemurware.blogspot.com/2006/05/webpy-apache-configuration-and-you.html"&gt;Walter
还有一些额外建议&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a name="apachescgi"&gt;&lt;/a&gt;\&lt;/p&gt;
&lt;h4&gt;.. 使用 SCGI&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://www.mems-exchange.org/software/scgi/"&gt;https://www.mems-exchange.org/software/scgi/&lt;/a&gt; 从
&lt;a href="http://www.mems-exchange.org/software/files/mod_scgi/"&gt;http://www.mems-exchange.org/software/files/mod_scgi/&lt;/a&gt; 下载 &lt;code&gt;mod_scgi&lt;/code&gt;
代码 windows apache 用户： 编辑 httpd.conf：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;LoadModule scgi_module Modules/mod_scgi.so
SCGIMount / 127.0.0.1:8080
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;重启apache，并在命令行中如下方式启动code.py：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;python code.py 127.0.0.1:8080 scgi
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;打开你的浏览器，访问127.0.0.1 It's ok!&lt;/p&gt;
&lt;p&gt;&lt;a name="apachemodpython"&gt;&lt;/a&gt;\&lt;/p&gt;
&lt;h4&gt;.. 使用 mod_python&lt;/h4&gt;
&lt;p&gt;mod_python 运行方式如同FastCGI， 但不是那么方便配置。&lt;/p&gt;
&lt;p&gt;对于 Python 2.5 按照如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd /usr/lib/python2.5/wsgiref
# or in windows: cd /python2.5/lib/wsgiref
wget -O modpython_gateway.py http://projects.amor.org/misc/browser/modpython_gateway.py?format=raw
# or fetch the file from that address using your browser
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;对于 Python \&amp;lt;2.5 按照如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd /usr/lib/python2.4/site-packages
# or in windows: cd /python2.4/lib/site-packages
svn co svn://svn.eby-sarna.com/svnroot/wsgiref/wsgiref
cd wsgiref
wget -O modpython_gateway.py http://projects.amor.org/misc/browser/modpython_gateway.py?format=raw
# or fetch the file from that address using your browser
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;重命名 &lt;code&gt;code.py&lt;/code&gt; 为 &lt;code&gt;codep.py&lt;/code&gt; 或别的名字， 添加：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;main = web.wsgifunc(web.webpyfunc(urls, globals()))
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在 &lt;code&gt;.htaccess&lt;/code&gt; 中， 添加：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;AddHandler python-program .py
PythonHandler wsgiref.modpython_gateway::handler
PythonOption wsgi.application codep::main
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;你应该希望添加 &lt;code&gt;RewriteRule&lt;/code&gt; 将 &lt;code&gt;/&lt;/code&gt; 指向 &lt;code&gt;/codep.py/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;确保访问 &lt;code&gt;/codep.py/&lt;/code&gt; 的时候有添加最后的 &lt;code&gt;/&lt;/code&gt;。
否则，你将会看到一条错误信息，比如
&lt;code&gt;A server error occurred. Please contact the administrator.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a name="apachemodwsgi"&gt;&lt;/a&gt;\&lt;/p&gt;
&lt;h4&gt;.. 使用 mod_wsgi&lt;/h4&gt;
&lt;p&gt;mod_wsgi 是一个新的Apache模块
&lt;a href="http://code.google.com/p/modwsgi/wiki/PerformanceEstimates"&gt;通常优于mod_python&lt;/a&gt;
用于架设WSGI应用，它非常容易配置。&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;code.py&lt;/code&gt; 的最后添加：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;application = web.wsgifunc(web.webpyfunc(urls, globals()))
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;mod_wsgi 提供
&lt;a href="http://code.google.com/p/modwsgi/wiki/ConfigurationDirectives"&gt;许多可行方法&lt;/a&gt;
来实现WSGI应用, 但一种简单的方法是添加以下到 .htaccess：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    SetHandler wsgi-script
    Options ExecCGI FollowSymLinks
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果在apache的 error.log 文件中出现 "ImportError: No module named web"，
在导入web之前，你可能需要在code.py中尝试设置绝对路径：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="n"&gt;abspath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__file__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;abspath&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;chdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;abspath&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;web&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;同时， 你可能需要查看
&lt;a href="http://code.google.com/p/modwsgi/wiki/ApplicationIssues"&gt;WSGI应用的常见问题&lt;/a&gt;的
"Application Working Directory" 部分。&lt;/p&gt;
&lt;p&gt;最终应该可以访问 &lt;code&gt;http://example.com/code.py/&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;a name="apachemodrewrite"&gt;&lt;/a&gt;\&lt;/p&gt;
&lt;h4&gt;mod_rewrite 法则，Apache&lt;/h4&gt;
&lt;p&gt;如果希望 web.py 能够通过 '&lt;a href="http://example.com/"&gt;http://example.com&lt;/a&gt;'
访问，代替使用 '&lt;a href="http://example.com/code.py/"&gt;http://example.com/code.py/&lt;/a&gt;'， 添加以下法则到
&lt;code&gt;.htaccess&lt;/code&gt; 文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  RewriteEngine on
  RewriteBase /
  RewriteCond %{REQUEST_URI} !^/icons
  RewriteCond %{REQUEST_URI} !^/favicon.ico$
  RewriteCond %{REQUEST_URI} !^(/.*)+code.py/
  RewriteRule ^(.*)$ code.py/$1 [PT]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果 &lt;code&gt;code.py&lt;/code&gt; 在子目录 &lt;code&gt;myapp/&lt;/code&gt;中， 调整 RewriteBase 为
&lt;code&gt;RewriteBase /myapp/&lt;/code&gt;。 如果还有一些静态文件如CSS文件和图片文件,
复制这些并改成你需要的地址。&lt;/p&gt;</summary></entry><entry><title>apache url rewrite</title><link href="/apache-url-rewrite.html" rel="alternate"></link><published>2010-04-19T16:17:00+08:00</published><author><name>lmatt wang</name></author><id>tag:,2010-04-19:apache-url-rewrite.html</id><summary type="html">&lt;p&gt;最近在ixwebhosting上安装了web.py(python下的一个full stack web
framework)，为了在路径中隐藏.py，需要使用url
rewrite。apache中mod_rewrite可以实现这个功能。&lt;/p&gt;
&lt;p&gt;在ixwebhosting下，可以修改网页根目录下的.htaccess，具体内容见下。&lt;/p&gt;
&lt;p&gt;[codesyntax lang="apache"]&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;RewriteEngine On
RewriteBase /
RewriteCond %{REQUEST_URI} !^/icons
RewriteCond %{REQUEST_URI} !^/favicon.ico$
RewriteCond %{REQUEST_URI} !^(/.*)+index.py/
RewriteRule ^(.*)$ index.py/$1 [PT]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;[/codesyntax]&lt;/p&gt;
&lt;p&gt;以后使用http://www.test.com/就相当于访问index.py，而且/*都由index.py来处理。\&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;mod_rewrite还有更多的内容，以后逐渐更新
&lt;/p&gt;&lt;/p&gt;
&lt;/blockquote&gt;</summary></entry><entry><title>subprocess(python)</title><link href="/subprocess(python).html" rel="alternate"></link><published>2010-04-18T07:21:00+08:00</published><author><name>lmatt wang</name></author><id>tag:,2010-04-18:subprocess(python).html</id><summary type="html">&lt;p&gt;subprocess
是python在2.4版本之后引入的用于subprocess管理的module。subprocess中有一个重要的类Popen和一个重要的方法call。下面对Popen和call进行相关说明。&lt;/p&gt;
&lt;p&gt;Popen用于新建一个subprocess，下面是它的构造函数。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;class&lt;/em&gt; &lt;code&gt;subprocess.Popen&lt;/code&gt;&lt;big&gt;(&lt;/big&gt;&lt;em&gt;args&lt;/em&gt;, &lt;em&gt;bufsize=0&lt;/em&gt;,
&lt;em&gt;executable=None&lt;/em&gt;, &lt;em&gt;stdin=None&lt;/em&gt;, &lt;em&gt;stdout=None&lt;/em&gt;, &lt;em&gt;stderr=None&lt;/em&gt;,
&lt;em&gt;preexec_fn=None&lt;/em&gt;, &lt;em&gt;close_fds=False&lt;/em&gt;, &lt;em&gt;shell=False&lt;/em&gt;, &lt;em&gt;cwd=None&lt;/em&gt;,
&lt;em&gt;env=None&lt;/em&gt;, &lt;em&gt;universal_newlines=False&lt;/em&gt;, &lt;em&gt;startupinfo=None&lt;/em&gt;,
&lt;em&gt;creationflags=0&lt;/em&gt;&lt;big&gt;)&lt;/big&gt;&lt;/p&gt;
&lt;p&gt;其中：&lt;/p&gt;
&lt;p&gt;args是运行进程的命令行（与shell中输入的命令行一样）；&lt;/p&gt;
&lt;p&gt;&lt;em&gt;bufsize&lt;/em&gt;, if given, has the same meaning as the corresponding argument
to the built-in open() function: &lt;code&gt;0&lt;/code&gt; means unbuffered, &lt;code&gt;1&lt;/code&gt; means line
buffered, any other positive value means use a buffer of (approximately)
that size. A negative &lt;em&gt;bufsize&lt;/em&gt; means to use the system default, which
usually means fully buffered. The default value for &lt;em&gt;bufsize&lt;/em&gt; is &lt;code&gt;0&lt;/code&gt;
(unbuffered).&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;executable&lt;/em&gt; argument specifies the program to execute. It is very
seldom needed: Usually, the program to execute is defined by the &lt;em&gt;args&lt;/em&gt;
argument. If &lt;code&gt;shell=True&lt;/code&gt;, the &lt;em&gt;executable&lt;/em&gt; argument specifies which
shell to use. On Unix, the default shell is &lt;code&gt;/bin/sh&lt;/code&gt;. On Windows, the
default shell is specified by the &lt;strong&gt;COMSPEC&lt;/strong&gt; environment variable. The
only reason you would need to specify &lt;code&gt;shell=True&lt;/code&gt; on Windows is where
the command you wish to execute is actually built in to the shell, eg
&lt;code&gt;dir&lt;/code&gt;, &lt;code&gt;copy&lt;/code&gt;. You don’t need &lt;code&gt;shell=True&lt;/code&gt; to run a batch file, nor to
run a console-based executable.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;stdin&lt;/em&gt;, &lt;em&gt;stdout&lt;/em&gt; and &lt;em&gt;stderr&lt;/em&gt;
指定了subprocess的标准输入、输出和错误流。这些值可以是subprocess.PIPE，文件描叙符（file
descriptor），文件对象（file
object）和None。使用subprocess.PIPE，会新建一个pipe到子进程，通过这个pipe父子进程可以进行信息传递。stderr可以为subprocess.STDOUT，表示stderr和stdout使用同样的file
handle。&lt;/p&gt;
&lt;p&gt;If &lt;em&gt;preexec_fn&lt;/em&gt; is set to a callable object, this object will be called
in the child process just before the child is executed. (Unix only)&lt;/p&gt;
&lt;p&gt;If &lt;em&gt;close_fds&lt;/em&gt; is true, all file descriptors except &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;2&lt;/code&gt;
will be closed before the child process is executed. (Unix only). Or, on
Windows, if &lt;em&gt;close_fds&lt;/em&gt; is true then no handles will be inherited by
the child process. Note that on Windows, you cannot set &lt;em&gt;close_fds&lt;/em&gt; to
true and also redirect the standard handles by setting &lt;em&gt;stdin&lt;/em&gt;, &lt;em&gt;stdout&lt;/em&gt;
or &lt;em&gt;stderr&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;If &lt;em&gt;shell&lt;/em&gt; is
&lt;a href="http://docs.python.org/library/constants.html#True" title="True"&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt;, the
specified command will be executed through the shell.&lt;/p&gt;
&lt;p&gt;If &lt;em&gt;cwd&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;, the child’s current directory will be changed to
&lt;em&gt;cwd&lt;/em&gt; before it is executed. Note that this directory is not considered
when searching the executable, so you can’t specify the program’s path
relative to &lt;em&gt;cwd&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;If &lt;em&gt;env&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;, it must be a mapping that defines the
environment variables for the new process; these are used instead of
inheriting the current process’ environment, which is the default
behavior.&lt;/p&gt;
&lt;div&gt;

Note

If specified, *env* must provide any variables required for the program
to execute. On Windows, in order to run a [side-by-side
assembly](http://en.wikipedia.org/wiki/Side-by-Side_Assembly) the
specified *env* **must** include a valid **SystemRoot**.

&lt;/div&gt;

&lt;p&gt;If &lt;em&gt;universal_newlines&lt;/em&gt; is
&lt;a href="http://docs.python.org/library/constants.html#True" title="True"&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt;, the
file objects stdout and stderr are opened as text files, but lines may
be terminated by any of &lt;code&gt;'\n'&lt;/code&gt;, the Unix end-of-line convention, &lt;code&gt;'\r'&lt;/code&gt;,
the old Macintosh convention or &lt;code&gt;'\r\n'&lt;/code&gt;, the Windows convention. All of
these external representations are seen as &lt;code&gt;'\n'&lt;/code&gt; by the Python program.&lt;/p&gt;
&lt;div&gt;

Note

This feature is only available if Python is built with universal newline
support (the default). Also, the newlines attribute of the file objects
[`stdout`](http://docs.python.org/library/subprocess.html#subprocess.Popen.stdout "subprocess.Popen.stdout"),
[`stdin`](http://docs.python.org/library/subprocess.html#subprocess.Popen.stdin "subprocess.Popen.stdin")
and
[`stderr`](http://docs.python.org/library/subprocess.html#subprocess.Popen.stderr "subprocess.Popen.stderr")
are not updated by the communicate() method.

&lt;/div&gt;

&lt;p&gt;The &lt;em&gt;startupinfo&lt;/em&gt; and &lt;em&gt;creationflags&lt;/em&gt;, if given, will be passed to the
underlying CreateProcess() function. They can specify things such as
appearance of the main window and priority for the new process. (Windows
only)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;[codesyntax lang="python" title="Example"]&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#! /usr/bin/python&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;subprocess&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
 &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Popen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;./bt_download.out&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PIPE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                      &lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PIPE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;STDOUT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Info&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
       &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readline&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
     &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Quit&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readline&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
 &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;[/codesyntax]&lt;/p&gt;
&lt;p&gt;上面的example通过subprocess，实现了父子进程的交流。需要注意的是，p.stdout.readline等操作都是阻塞操作。&lt;/p&gt;
&lt;p&gt;call方法，同Popen的构造函数，其函数的declare如下：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;subprocess.call&lt;/code&gt;&lt;big&gt;(&lt;/big&gt;&lt;em&gt;*popenargs&lt;/em&gt;, &lt;em&gt;**kwargs&lt;/em&gt;&lt;big&gt;)&lt;/big&gt;&lt;/p&gt;
&lt;p&gt;其中openargs就是对应Popen中的args，kwargs就对Popen后面的一系列argument。&lt;/p&gt;
&lt;p&gt;Example如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;retcode = subprocess.call([&amp;quot;ls&amp;quot;, &amp;quot;-l&amp;quot;])
它会等待ls命令执行完毕，retcode是子进程执行完的retcode。
&lt;/pre&gt;&lt;/div&gt;</summary></entry><entry><title>pyqt的安装(linux下)</title><link href="/pyqtdeanzhuang(linuxxia).html" rel="alternate"></link><published>2010-04-18T06:34:00+08:00</published><author><name>lmatt wang</name></author><id>tag:,2010-04-18:pyqtdeanzhuang(linuxxia).html</id><summary type="html">&lt;p&gt;nokia在收购qt之后，让qt出现了lgpl的licence，这一举动获得了不少赞许。nokia也希望pyqt能有lgpl的licence，只可惜与Riverbank谈判不拢，pyqt依旧是gpl的licence。迫不得已，nokia只好自己搞个类似pyqt的项目（pyside）。这个pyside项目的协议是lgpl的，目前还不够完善，但相信以后的前景是不错的。&lt;/p&gt;
&lt;p&gt;目前pyqt仍然是主流，所以下面说一下pyqt的安装。由于windows有安装的exe，几乎不用配置就可以安装上，这里就不做说明。&lt;/p&gt;
&lt;p&gt;要在linux下安装pyqt，首先需要安装Riverbank的SIP。在SIP安装前需要确保系统上安装了python-devel（python
开发的一些文件，在fedora下可以直接yum安装）。&lt;/p&gt;
&lt;p&gt;安装SIP过程：&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #3366ff;"&gt;1.下载SIP，解压。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #3366ff;"&gt;2.从命令行中进入SIP的目录，输入python
configure.py&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span
style="color: #3366ff;"&gt;3.在上一步成功之后，输入make（需要确保有make，gcc等一系列编译工具）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #3366ff;"&gt;4.在上一步成功之后，输入make
install。到此sip安装完成。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;接着是pyqt的安装：&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #3366ff;"&gt;1.下载pyqt，解压&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #3366ff;"&gt;2.从命令行进入pyqt的目录，输入python
configure.py&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span
style="color: #3366ff;"&gt;3.在上一步成功之后，输入make（需要确保有make，gcc等一系列编译工具）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #3366ff;"&gt;4.在上一步成功之后，输入make
install。到此pyqt安装完成。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #3366ff;"&gt;&lt;span style="color: #000000;"&gt;bug:pyqt
4.7.2貌似存在bug，在import
QtGui和QtCore时，需要先引入QtGui。这个问题导致许多pyqt程序无法运行。&lt;/span&gt;\
&lt;/span&gt;&lt;/p&gt;</summary></entry><entry><title>vimrc配置（持续更新）</title><link href="/vimrcpeizhichixugengxin.html" rel="alternate"></link><published>2010-04-18T05:59:00+08:00</published><author><name>lmatt wang</name></author><id>tag:,2010-04-18:vimrcpeizhichixugengxin.html</id><summary type="html">&lt;p&gt;文章转载自http://jmcpherson.org/vimrc.html&lt;/p&gt;
&lt;p&gt;.vimrc and customization&lt;/p&gt;
&lt;p&gt;vim is extremely customizable. It will read the file .vimrc in your home
directory before it starts. This file can contain settings and even
scripts. The below settings are ones I've found helpful -- give them a
try!&lt;/p&gt;
&lt;p&gt;set nocompatible&lt;/p&gt;
&lt;p&gt;This setting prevents vim from emulating the original vi's bugs and
limitations.\
set autoindent\
set smartindent&lt;/p&gt;
&lt;p&gt;The first setting tells vim to use "autoindent" (that is, use the
current line's indent level to set the indent level of new lines). The
second makes vim attempt to intelligently guess the indent level of any
new line based on the previous line, assuming the source file is in a
C-like language. Combined, they are very useful in writing
well-formatted source code.\
set tabstop=4\
set shiftwidth=4&lt;/p&gt;
&lt;p&gt;I prefer 4-space tabs to 8-space tabs. The first setting sets up 4-space
tabs, and the second tells vi to use 4 spaces when text is indented
(auto or with the manual indent adjustmenters.)\
set showmatch&lt;/p&gt;
&lt;p&gt;This setting will cause the cursor to very briefly jump to a
brace/parenthese/bracket's "match" whenever you type a closing or
opening brace/parenthese/bracket. I've had almost no
mismatched-punctuation errors since I started using this setting.\
set guioptions-=T&lt;/p&gt;
&lt;p&gt;I find the toolbar in the GUI version of vim (gvim) to be somewhat
useless visual clutter. This option gets rid of the toolbar.\
set vb t_vb=&lt;/p&gt;
&lt;p&gt;This setting prevents vi from making its annoying beeps when a command
doesn't work. Instead, it briefly flashes the screen -- much less
annoying.\
set ruler&lt;/p&gt;
&lt;p&gt;This setting ensures that each window contains a statusline that
displays the current cursor position.\
set nohls&lt;/p&gt;
&lt;p&gt;By default, search matches are highlighted. I find this annoying most of
the time. This option turns off search highlighting. You can always turn
it back on with :set hls.\
set incsearch&lt;/p&gt;
&lt;p&gt;With this nifty option, vim will search for text as you enter it. For
instance, if you type /bob to search for bob, vi will go to the first
"b" after you type the "b," to the first "bo" after you type the "o,"
and so on. It makes searching much faster, since if you pay attention
you never have to enter more than the minimum number of characters to
find your target location. Make sure that you press Enter to accept the
match after vim finds the location you want.\
set virtualedit=all&lt;/p&gt;
&lt;p&gt;By default, vim doesn't let the cursor stray beyond the defined text.
This setting allows the cursor to freely roam anywhere it likes in
command mode. It feels weird at first but is quite useful.&lt;/p&gt;
&lt;p&gt;Type :help options within vim to get a complete list of options.&lt;/p&gt;
&lt;p&gt;Many more advanced techniques, options, and mappings are available on
&lt;a href="http://www.vim.org/"&gt;the official vim site&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;//下面是个人的一些配置&lt;/p&gt;
&lt;p&gt;set smarttab 按backspace键时自动将4个空格一次删除&lt;/p&gt;
&lt;p&gt;set number&lt;/p&gt;
&lt;p&gt;set expandtab&lt;/p&gt;
&lt;p&gt;set scrolloff=3&lt;/p&gt;
&lt;p&gt;syntax on&lt;/p&gt;
&lt;p&gt;-------------------- for windows vim-------------------------\
set nocampatible\
set autoindent\
set smartindent\
set tabstop=4\
set shiftwidth=4\
set showmatch\
set ruler\
set smarttab\
set number\
set expandtab\
set scrolloff=3\
syntax on\
--------------------end for windows vim--------------------&lt;/p&gt;</summary></entry><entry><title>libvlc与pyqt搭配使用</title><link href="/libvlcyupyqtdapeishiyong.html" rel="alternate"></link><published>2010-03-30T17:35:00+08:00</published><author><name>lmatt wang</name></author><id>tag:,2010-03-30:libvlcyupyqtdapeishiyong.html</id><summary type="html">&lt;p&gt;libvlc是vlc播放器社区所提供的一个库，使用这个库，可以快速实现一个全能的播放器（支持很多视频格式的播放）。对于这个库，官方提供的是c++版本，不过现在有很多语言的binding，如python,
java,
c#等。要提到的一点是，libvlc是gpl协议的。为了更方便与pyqt联合起来使用，我选择了python
binding的libvlc。对于python版本，官方wiki上所给出的链接地址是错误(可能是过期的原因)的，下面给出最新的地址。http://liris.cnrs.fr/advene/download/python-ctypes/
从最新的地址下载到vlc.py文件之后，你可以将vlc.py放到sit-package或当前工作目录中。如果要导入这个文件，只需要在python脚本中添加import
vlc即可。python版libvlc的api详情可参见http://liris.cnrs.fr/advene/download/python-ctypes/doc/index.html。要实现视频的播放，仅仅靠一个vlc.py是不够的，您还需要确保个人的机器上有vlc的lib（可以通过安装vlc播放器来获得，也可以自己讲lib的部分打包起来）。有了这些之后，你可以通过运行vlc.py这个文件来查看是否配置成功，直接在命令行中输入python
vlc.py
path（path为视频文件的路径）。如果成功配置，会弹出一个视频窗口播放您所输入的文件。&lt;/p&gt;
&lt;p&gt;接着就是用pyqt来把libvlc封装起来，这里我参考了vlc官方wiki上关于在qt中使用libvlc的例子。从qt的c++到pyqt的python语言，其中的转变没有花费太多的时间。很多内容都是相同，只不过pyqt会显得更加简单。这里需要提到的是pyqt也是gpl的，不过你可以购买到商业许可。下面是我用pyqt和libvlc写的一个简单播放器代码。其中需要注意的一点，在绑定窗口和libvlc时，直接使用QWidget不会成功（代码中使用的是QFrame）。&lt;/p&gt;
&lt;p&gt;[codesyntax lang="python"]&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#! /usr/bin/python&lt;/span&gt;
&lt;span class="c1"&gt;# coding=utf-8&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;vlc&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PyQt4&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;QtGui&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PyQt4&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;QtCore&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;VLCWidget&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QtGui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QWidget&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;QtGui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QWidget&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;videoWidget&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QtGui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;volumeSlider&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QtGui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QSlider&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QtCore&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Qt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Horizontal&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;volumeSlider&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setMaximum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;volumeSlider&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setToolTip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Audio slider&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;positionSlider&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QtGui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QSlider&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QtCore&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Qt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Horizontal&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;positionSlider&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setMaximum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;layout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QtGui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QVBoxLayout&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;layout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addWidget&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;videoWidget&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;layout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addWidget&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;positionSlider&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;layout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addWidget&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;volumeSlider&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setLayout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;layout&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setMinimumHeight&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isPlaying&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;poller&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QtCore&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QTimer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;inst&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vlc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Instance&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;player&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;inst&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;media_player_new&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;platform&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;linux2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;player&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_xwindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;videoWidget&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;winId&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
        &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;platform&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;win32&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;player&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_hwnd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;videoWidget&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;winId&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;poller&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;updateInterface&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;positionSlider&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sliderMoved&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;changePosition&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;volumeSlider&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sliderMoved&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;changeVolume&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;poller&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;changeVolume&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;newVolume&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;#print &amp;#39;volume&amp;#39;&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;inst&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;audio_set_volume&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;newVolume&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;changePosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;newPosition&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;media&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;player&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_media&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;media&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt;

        &lt;span class="n"&gt;pos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;newPosition&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;10000&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;player&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_position&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;updateInterface&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;media&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;player&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_media&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="c1"&gt;#print &amp;#39;tick&amp;#39;&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;media&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt;

        &lt;span class="c1"&gt;#print &amp;#39;tick&amp;#39;&lt;/span&gt;
        &lt;span class="n"&gt;pos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;player&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_position&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;10000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;positionSlider&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;volume&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;inst&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;audio_get_volume&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;volumeSlider&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;volume&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;play&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;
        &lt;span class="n"&gt;media&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;inst&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;media_new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;player&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_media&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;media&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;player&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;play&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="c1"&gt;#def sizeHint(self):&lt;/span&gt;
    &lt;span class="c1"&gt;#   return QtCore.QSize(750, 500)&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MainWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QtGui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QMainWindow&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QtGui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QMainWindow&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setupActions&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setupMenus&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setupUI&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;center&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;



    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;closeEvent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;pass&lt;/span&gt;
        &lt;span class="c1"&gt;#event.ignore()&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;setupUI&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;player&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;VLCWidget&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

        &lt;span class="n"&gt;mainLayout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QtGui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QVBoxLayout&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;mainLayout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addWidget&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;player&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;widget&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QtGui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QWidget&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setLayout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mainLayout&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setCentralWidget&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;800&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setWindowTitle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;SimplePlayer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;setupActions&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addFilesAction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QtGui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QAction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Add &amp;amp;Files;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;shortcut&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Ctrl+F&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;triggered&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addFiles&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exitAction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QtGui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QAction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;E&amp;amp;xit;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;shortcut&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Ctrl+X&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;triggered&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;settingsAction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QtGui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QAction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;amp;Settings;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;shortcut&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Ctrl+S&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;triggered&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;aboutAction&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;QtGui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QAction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;amp;About;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;shortcut&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Ctrl+A&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;triggered&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;about&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;aboutAuthorAction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QtGui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QAction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Author&amp;#39;s &amp;amp;HomePage;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;shortcut&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Ctrl+H&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;triggered&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;aboutAuthor&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;pass&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;about&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;pass&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;aboutAuthor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;pass&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;addFiles&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

        &lt;span class="n"&gt;files&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QtGui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QFileDialog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getOpenFileNames&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Select&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt;

        &lt;span class="c1"&gt;#self.player.play(unicode(files[0]))&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;player&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;play&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;toUtf8&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;setupMenus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;fileMenu&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;menuBar&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addMenu&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;amp;File;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;fileMenu&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addAction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addFilesAction&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;fileMenu&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addSeparator&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;fileMenu&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addAction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exitAction&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;toolMenu&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;menuBar&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addMenu&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;amp;Tools;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;toolMenu&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addAction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;settingsAction&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;aboutMenu&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;menuBar&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addMenu&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;amp;Help;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;aboutMenu&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addAction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;aboutAction&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;aboutMenu&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addAction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;aboutAuthorAction&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;center&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;screen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QtGui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QDesktopWidget&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;screenGeometry&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;move&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;screen&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;screen&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QtGui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QApplication&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setApplicationName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;SimplePlayer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setQuitOnLastWindowClosed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;window&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MainWindow&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exec_&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;[/codesyntax]&lt;/p&gt;</summary></entry><entry><title>编译libtorrent rasterbar(linux下)</title><link href="/bianyilibtorrent-rasterbar(linuxxia).html" rel="alternate"></link><published>2010-03-26T19:20:00+08:00</published><author><name>lmatt wang</name></author><id>tag:,2010-03-26:bianyilibtorrent-rasterbar(linuxxia).html</id><summary type="html">&lt;p&gt;六维、晨光等ipv6的bt下载站只支持为数不多的client，仅支持utorrent,
k**(名字忘记了，和KDE有些关系),
transmission(在linux上貌似没法下载，仅支持mac
os)。为了能在linux下下载电影，我只好用wine+utorrent来搞定（不想装k**）。可是用的时间久了，总觉得有点什么。于是呢，我就想自己写个支持torrent协议的程序，再在上面添加上边下边播放（utorrent上一直没有，我觊觎这个功能很久了）的功能。在网上搜索了相关的一些资料，最后决定使用libtorrent
rasterbar（网上还有另外一个叫libtorrent的库，而且那个库仅支持linux）。libtorrent
rasterbar用到了boost的一些库，正好最近我也在学习boost。下面是libtorrent的编译过程。\&lt;/p&gt;
&lt;h2&gt;1.编译boost&lt;/h2&gt;
&lt;p&gt;这里我使用了boost.build来编译生成。&lt;/p&gt;
&lt;p&gt;a.首先进入BOOST_ROOT/tools/jam/src目录（BOOST_ROOT为boost的根目录)，接着在命令行中运行./build.sh&lt;/p&gt;
&lt;p&gt;b.将上一步所生成bin.XXX目录中的bjam拷贝到系统的path（如/usr/local/bin）中，这样以后就可以直接使用bjam这个命令。&lt;/p&gt;
&lt;p&gt;c.切换到BOOST_ROOT/tools/build/v2目录，修改user-config.jam（具体详细操作可以参看user-config.jam文件中的内容）内容。在user-config.jam中找到using
gcc这行，将前面的#去掉。&lt;/p&gt;
&lt;p&gt;d.进入BOOST_ROOT目录，在命令行中运行bjam
stage。这个过程需要一段时间才能完成。完成后，BOOST_ROOT目录下会出现一个stage的目录，里面包含了boost所生成的lib。\&lt;/p&gt;
&lt;h2&gt;2.编译libtorrent rasterbar&lt;/h2&gt;
&lt;p&gt;这里我使用了automake和auotconf来生成，所以需要首先确认机器上是否已安装automake和autoconf。&lt;/p&gt;
&lt;p&gt;a.确保环境变量中有BOOST_ROOT，即是boost的根目录。&lt;/p&gt;
&lt;p&gt;b.进入libtorrent的根目录，在命令行下运行./configure --disable-debug --disable-encryption --without-zlib --prefix=\$HOME/libtorrent（其他具体参数可使用./configure --help来查看）。如果去掉--disable-encryption，需要确认你机器上安装有openssl。而--without-zlib是指不使用系统的zlib。--prefix是指libtorrent的安装目录（其实boost也是可以指定安装目录的，就是指其编译完后库文件的存放位置）。&lt;/p&gt;
&lt;p&gt;c.输入make install即可完成编译。\&lt;/p&gt;
&lt;h2&gt;3.libtorrent rasterbar测试程序的编译运行&lt;/h2&gt;
&lt;p&gt;使用如下命令实现编译&lt;/p&gt;
&lt;p&gt;g++ -I(boost的根目录) -I(libtorrent的include目录) -I(zlib的目录，在libtorrent的根目录下)
(boost的lib目录+*.so) (libtorrent的lib目录+*.so) xx.cpp&lt;/p&gt;
&lt;p&gt;这里使用*.so是用了共享的方式链接。&lt;/p&gt;
&lt;p&gt;程序的运行需要确保，libtorrent的lib和boost的lib目录在系统搜索路径下。默认的搜索路径在/usr/lib，可以通过修改/etc/ld.so.conf来添加新的路径。添加完新的路径后，需要运行ldconfig命令以更新。&lt;/p&gt;</summary></entry><entry><title>gcc编译（持续更新）</title><link href="/gccbianyichixugengxin.html" rel="alternate"></link><published>2010-03-25T17:21:00+08:00</published><author><name>lmatt wang</name></author><id>tag:,2010-03-25:gccbianyichixugengxin.html</id><summary type="html">&lt;p&gt;gcc -I[path] 后接include目录&lt;/p&gt;
&lt;p&gt;gcc -L[path] 后接library目录,一般会与-l(L小写)[library
name（如libabc.a,名称就为abc）]连用。&lt;/p&gt;
&lt;p&gt;gcc -static 静态链接。可能会产生"cannot
find -lm"错误，这是由于缺少glibc-static的原因（fedora系统上就可能存在这个问题）。安装上glibc-static后，/usr/lib/目录下会出现libm.a这个文件。&lt;/p&gt;
&lt;p&gt;gcc -o[out name] 接输出文件的名称&lt;/p&gt;
&lt;p&gt;gcc -w                inhibit all warning message
(不允许出现任何warning消息) ［东哥］&lt;/p&gt;
&lt;p&gt;gcc -Wall            打开部分的warning的flag,这部分flag所对应的
warning可能是用户避免或觉得有问题的。&lt;/p&gt;
&lt;p&gt;gcc -Wextra（或旧版-W)      打开-Wall剩下的部分flag&lt;/p&gt;
&lt;p&gt;gcc -g test.c&lt;/p&gt;
&lt;p&gt;通过-g参数，可以生成gdb所需要的debug信息。可能会生成一些只有gdb才能使用的debug信息，这对其他的debug程序会造成影响。要控制这些特殊的debug信息，可以通过-gstabs+, -gstabs, -gxcoff和-gvms参数。&lt;/p&gt;</summary></entry><entry><title>Template</title><link href="/Template.html" rel="alternate"></link><published>2010-03-21T08:38:00+08:00</published><author><name>lmatt wang</name></author><id>tag:,2010-03-21:Template.html</id><summary type="html">&lt;p&gt;文章内容参考了&lt;a href="http://www.cplusplus.com/doc/tutorial/templates/"&gt;http://www.cplusplus.com/doc/tutorial/templates/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;个人觉得template的使用，使得
c++更加oo了。下面就记录下template的几种用法。\&lt;/p&gt;
&lt;h1&gt;&lt;strong&gt;Function template&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;函数template的声明和定义一般使用如下的方法。&lt;/p&gt;
&lt;p&gt;[codesyntax lang="cpp" title="function template"]&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="nt"&gt;declaration&lt;/span&gt;
&lt;span class="nt"&gt;template&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="nt"&gt;or&lt;/span&gt; &lt;span class="nt"&gt;template&lt;/span&gt; 
&lt;span class="nt"&gt;T&lt;/span&gt; &lt;span class="nt"&gt;getMax&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;T&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;T&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="nt"&gt;definition&lt;/span&gt;
&lt;span class="nt"&gt;template&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="nt"&gt;or&lt;/span&gt; &lt;span class="nt"&gt;template&lt;/span&gt; 
&lt;span class="nt"&gt;T&lt;/span&gt; &lt;span class="nt"&gt;getMax&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;T&lt;/span&gt; &lt;span class="nt"&gt;lfs&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;T&lt;/span&gt; &lt;span class="nt"&gt;rfs&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="n"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lfs&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;rfs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="n"&gt;lfs&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;rfs&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;[/codesyntax]&lt;/p&gt;
&lt;p&gt;函数的使用如下。\
中的内容为类型名称，在某些情况（编译器能够理解）下可以省略，下面的例子就可以省略。&lt;/p&gt;
&lt;p&gt;[codesyntax lang="cpp"]&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;int a = 10, b = 11;
int c = getMax(a, b);//or getMax(a, b)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;[/codesyntax]\&lt;/p&gt;
&lt;h1&gt;&lt;strong&gt;Class template&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;类template的定义一般如下。&lt;/p&gt;
&lt;p&gt;[codesyntax lang="cpp"]&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;template
class MyArray{
private:
   const int N;
  int len;
  T *s;
 MyArray();
public:
   MyArray(int n):N(n){
      s = new T[N];
     len = 0;
  }
 T at(int i);//declaration
};

template
T MyArray::at(int i){
    if(i &amp;lt; len) return s[i];
  else ;//throw exception
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;[/codesyntax]&lt;/p&gt;
&lt;p&gt;类template的使用如下。&lt;/p&gt;
&lt;p&gt;[codesyntax lang="cpp"]&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;MyArray&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;10&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="nt"&gt;some&lt;/span&gt; &lt;span class="nt"&gt;code&lt;/span&gt; &lt;span class="nt"&gt;here&lt;/span&gt;
&lt;span class="nt"&gt;std&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;:cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="nc"&gt;.at&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="nt"&gt;std&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;:endl&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;[/codesyntax]\&lt;/p&gt;
&lt;h1&gt;&lt;strong&gt;Template specialization&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;这里以文章开头&lt;a href="http://www.cplusplus.com/doc/tutorial/templates/"&gt;链接&lt;/a&gt;中给出的例子来进行说明。其中的mychar.increase()是我添加上去的，这句话会导致编译错误（error:
‘class mycontainer&lt;char&gt;’ has no member named
‘increase’）。这是由于template specialization并不有继承的关系。&lt;/p&gt;
&lt;p&gt;[codesyntax lang="cpp"]&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// template specialization&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; 
&lt;span class="cpf"&gt;using namespace std;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="c1"&gt;// class template:&lt;/span&gt;
&lt;span class="k"&gt;template&lt;/span&gt; 
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;mycontainer&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;mycontainer&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;
    &lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="n"&gt;increase&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// class template specialization:&lt;/span&gt;
&lt;span class="k"&gt;template&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;mycontainer&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;/char&gt;&lt;char&gt; {\
 char element;\
 public:\
 mycontainer (char arg) {element=arg;}\
 char uppercase ()\
 {\
 if ((element&gt;='a')&amp;amp;&amp;amp;(element\&amp;lt;='z'))\
 element+='A'-'a';\
 return element;\
 }\
};&lt;/p&gt;
&lt;p&gt;int main () {\
 mycontainer&lt;int&gt; myint (7);\
 mycontainer&lt;/int&gt;&lt;/char&gt;&lt;char&gt; mychar ('j');\
 cout \&amp;lt;\&amp;lt; myint.increase() \&amp;lt;\&amp;lt; endl;\
 cout \&amp;lt;\&amp;lt; mychar.uppercase() \&amp;lt;\&amp;lt; endl;&lt;/p&gt;
&lt;p&gt;//lmatt add,error!\
 cout \&amp;lt;\&amp;lt; (char)mychar.increase() \&amp;lt;\&amp;lt; endl;\
 //lmatt add&lt;/p&gt;
&lt;p&gt;return 0;\
}\
[/codesyntax]\&lt;/p&gt;
&lt;h1&gt;Non-type parameters for templates&lt;/h1&gt;
&lt;p&gt;在template中也能像函数那样使用常规的类型作为参数。如下代码所示。其中的MyArray2有default参数，可以直接使用MyArray2
a;。&lt;/p&gt;
&lt;p&gt;[codesyntax lang="cpp"]&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;template
class MyArray1{
    T s[N];
};
template
class MyArray2{
 T s[N];
};
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;[/codesyntax]\&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Template的声明和实现必须在同一个文件中，这是由于template是compiled on
demand的，仅仅在被实例化的时候才被compile。同样由于这个原因，template的文件被多次引入也不会产生link
error。
&lt;/p&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;/char&gt;&lt;/p&gt;</summary></entry><entry><title>#pragma（转载自百度百科)</title><link href="/pragmazhuanzaizibaidubaike.html" rel="alternate"></link><published>2010-03-19T18:42:00+08:00</published><author><name>lmatt wang</name></author><id>tag:,2010-03-19:pragmazhuanzaizibaidubaike.html</id><summary type="html">&lt;h1&gt;&lt;a href="http://baike.baidu.com/view/1451188.htm"&gt;#pragma&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;#pragma 预处理指令详解\
在所有的预处理指令中，#Pragma
指令可能是最复杂的了，它的作用是设定编译器的状态或者是指示编译器完成一些特定的动作。#pragma指令对每个编译器给出了一个方法,在保持与C和
C++语言完全兼容的情况下,给出主机或操作系统专有的特征。依据定义,编译指示是机器或操作系统专有的,且对于每个编译器都是不同的。\
其格式一般为: #Pragma Para\
其中Para 为参数，下面来看一些常用的参数。\
(1)message 参数。 Message
参数能够在编译信息输出窗口中输出相应的信息，这对于源代码信息的控制是非常重要的。其使用方法为：\
#Pragma message(“消息文本”)\
当编译器遇到这条指令时就在编译输出窗口中将消息文本打印出来。\
当我们在程序中定义了许多宏来控制源代码版本的时候，我们自己有可能都会忘记有没有正确的设置这些宏，此时我们可以用这条指令在编译的时候就进行检查。假设我们希望判断自己有没有在源代码的什么地方定义了_X86这个宏可以用下面的方法\
#ifdef _X86\
#Pragma message(“_X86 macro activated!”)\
#endif\
当我们定义了_X86这个宏以后，应用程序在编译时就会在编译输出窗口里显示“_X86
macro
activated!”。我们就不会因为不记得自己定义的一些特定的宏而抓耳挠腮了。\
(2)另一个使用得比较多的pragma参数是code_seg。格式如：\
#pragma code_seg( ["section-name"[,"section-class"] ] )\
它能够设置程序中函数代码存放的代码段，当我们开发驱动程序的时候就会使用到它。\
(3)#pragma once (比较常用）\
只要在头文件的最开始加入这条指令就能够保证头文件被编译一次，这条指令实际上在VC6中就已经有了，但是考虑到兼容性并没有太多的使用它。\
#pragma
once是编译相关，就是说这个编译系统上能用，但在其他编译系统不一定可以，也就是说移植性差，不过现在基本上已经是每个编译器都有这个定义了。\
(4)#pragma
hdrstop表示预编译头文件到此为止，后面的头文件不进行预编译。BCB可以预编译头文件以加快链接的速度，但如果所有头文件都进行预编译又可能占太多磁盘空间，所以使用这个选项排除一些头文件。\
有时单元之间有依赖关系，比如单元A依赖单元B，所以单元B要先于单元A编译。你可以用#pragma
startup指定编译优先级，如果使用了#pragma package(smart_init)
，BCB就会根据优先级的大小先后编译。\
(5)#pragma resource
"*.dfm"表示把*.dfm文件中的资源加入工程。*.dfm中包括窗体外观的定义。\
(6)#pragma warning( disable : 4507 34; once : 4385; error : 164 )\
等价于：\
#pragma warning(disable:4507 34) // 不显示4507和34号警告信息\
#pragma warning(once:4385) // 4385号警告信息仅报告一次\
#pragma warning(error:164) // 把164号警告信息作为一个错误。\
同时这个pragma warning 也支持如下格式：\
#pragma warning( push [ ,n ] )\
#pragma warning( pop )\
这里n代表一个警告等级(1---4)。\
#pragma warning( push )保存所有警告信息的现有的警告状态。\
#pragma warning( push,
n)保存所有警告信息的现有的警告状态，并且把全局警告等级设定为n。\
#pragma warning( pop )向栈中弹出最后一个警告信息，\
在入栈和出栈之间所作的一切改动取消。例如：\
#pragma warning( push )\
#pragma warning( disable : 4705 )\
#pragma warning( disable : 4706 )\
#pragma warning( disable : 4707 )\
//.......\
#pragma warning( pop )\
在这段代码的最后，重新保存所有的警告信息(包括4705，4706和4707)。\
(7)pragma comment(...)\
该指令将一个注释记录放入一个对象文件或可执行文件中。\
常用的lib关键字，可以帮我们连入一个&lt;a href="http://baike.baidu.com/view/1595059.htm"&gt;库文件&lt;/a&gt;。\
每个编译程序可以用#pragma指令激活或终止该编译程序支持的一些编译功能。例如，对循环优化功能：\
#pragma loop_opt(on) // 激活\
#pragma loop_opt(off) // 终止\
有时，程序中会有些函数会使编译器发出你熟知而想忽略的警告，如“Parameter
xxx is never used in function xxx”，可以这样：\
#pragma warn —100 // Turn off the warning message for warning #100\
int insert_record(REC *r)\
{ /* function body */ }\
#pragma warn +100 // Turn the warning message for warning #100 back
on\
函数会产生一条有唯一特征码100的警告信息，如此可暂时终止该警告。\
每个编译器对#pragma的实现不同，在一个编译器中有效在别的编译器中几乎无效。可从编译器的文档中查看。\
#pragma pack(n)和#pragma pack()\
struct sample\
{\
char a;\
double b;\
};\
当sample结构没有加#pragma pack(n)的时候,sample按最大的成员那个对齐;\
（所谓的对齐是指对齐数为n时,对每个成员进行对齐,既如果成员a的大小小于n则将a扩大到n个大小;\
如果a的大小大于n则使用a的大小;）所以上面那个结构的大小为16字节.\
当sample结构加#pragma pack(1)的时候,sizeof(sample)=9字节;无空字节。\
（另注：当n大于sample结构的最大成员的大小时，n取最大成员的大小。\
所以当n越大时，结构的速度越快，大小越大；反之则）\
#pragma pack()就是取消#pragma
pack(n)的意思了，也就是说接下来的结构不用#pragma pack(n)\&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;文章中引用到&lt;a href="http://blog.csdn.net/wrq147/archive/2009/07/31/4398674.aspx"&gt;http://blog.csdn.net/wrq147/archive/2009/07/31/4398674.aspx&lt;/a&gt;
&lt;/p&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;补充：pragma comment(lib, "xx.lib"),用于导入某个库&lt;/p&gt;</summary></entry><entry><title>apache 配置http代理服务器</title><link href="/apache-peizhihttpdailifuwuqi.html" rel="alternate"></link><published>2010-03-16T09:45:00+08:00</published><author><name>lmatt wang</name></author><id>tag:,2010-03-16:apache-peizhihttpdailifuwuqi.html</id><summary type="html">&lt;p&gt;以opensuse11.2为例，在/etc/apache2/sysconfig.d/目录中的loadmodule.conf中添加如下内容。分别是载入cache,disk_cache,proxy和proxy_http模块。其中cache和disk_cache用于缓存信息，proxy和proxy_http（用于支持http）用于启用代理。&lt;/p&gt;
&lt;p&gt;[codesyntax lang="apache"]&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;LoadModule cache_module /usr/lib/apache2-prefork/mod_cache.so
LoadModule disk_cache_module /usr/lib/apache2-prefork/mod_disk_cache.so
LoadModule proxy_module /usr/lib/apache2-prefork/mod_proxy.so
LoadModule proxy_http_module /usr/lib/apache2-prefork/mod_proxy_http.so
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;[/codesyntax]&lt;/p&gt;
&lt;p&gt;然后在/etc/apache2/conf.d目录下新建一个proxy.conf，文件中添加如下内容&lt;/p&gt;
&lt;p&gt;[codesyntax lang="apache"]&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#CacheRoot cache存放的位置
#CacheMaxFileSize 以byte为单位


  CacheRoot /home/cache/
    CacheEnable disk /
    CacheDirLevels 5
  CacheDirLength 3
  CacheMaxFileSize 2097152



#直接代理
ProxyRequests On
ProxyVia On

#需要密码验证。密码文件使用htpasswd 生成，存放的位置则由AuthUserFile指出。

Order deny,allow
Allow from all
AuthType Basic
AuthName &amp;quot;need password&amp;quot;
AuthUserFile passwords
Require valid-user
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;[/codesyntax]&lt;/p&gt;
&lt;p&gt;然后重启apache就可以了。/etc/int.d/apache2 restart&lt;/p&gt;</summary></entry><entry><title>c++ const的一些知识</title><link href="/c++-constdeyixiezhishi.html" rel="alternate"></link><published>2010-03-15T16:58:00+08:00</published><author><name>lmatt wang</name></author><id>tag:,2010-03-15:c++-constdeyixiezhishi.html</id><summary type="html">&lt;p&gt;const 指针&lt;/p&gt;
&lt;p&gt;const在*左边，是指指针所指的对象是不可以改变的；在*右边，则是指指针不能指向另外一个对象。&lt;/p&gt;
&lt;p&gt;[codesyntax lang="cpp"]&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;int b = 10;
const int *a = &amp;amp;b;//or int const *a = &amp;amp;b;
*a = 11;//error

int d = 20;
int * const c = &amp;amp;b;
c = &amp;amp;d;//error
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;[/codesyntax]&lt;/p&gt;
&lt;p&gt;const 引用&lt;/p&gt;
&lt;p&gt;const只能在&amp;amp;左边，指所引用的对象不能被改变。如&lt;/p&gt;
&lt;p&gt;[codesyntax lang="cpp"]&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;int a = 10;
const int &amp;amp;b; = a;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;[/codesyntax]&lt;/p&gt;
&lt;p&gt;const 函数&lt;/p&gt;
&lt;p&gt;一般将const放在签名的最后。如&lt;/p&gt;
&lt;p&gt;[codesyntax lang="cpp"]&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;int add(int b) const;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;[/codesyntax]&lt;/p&gt;
&lt;p&gt;如果是成员函数，则不能改变数据成员的value.&lt;/p&gt;</summary></entry><entry><title>配linux服务器时遇到的一些问题</title><link href="/peilinuxfuwuqishiyudaodeyixiewenti.html" rel="alternate"></link><published>2010-03-12T16:26:00+08:00</published><author><name>lmatt wang</name></author><id>tag:,2010-03-12:peilinuxfuwuqishiyudaodeyixiewenti.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;1.硬盘安装&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;有很长一段时间没有安装过linux了，所以对硬盘安装有些忘记。&lt;/p&gt;
&lt;p&gt;这里对硬盘安装的一些步骤进行下记录。首先需要安装上grub，这里提下grub4dos的安装，xp系统(vista和win
7还不清楚)都可以通过修改boot.ini来引导grub。进入grub后，输入以下命令即可引导linux安装。命令中的vmlinuz和initrd.img都是从光盘映像中拷出来的，有可能名字不一样（这与不同版本的linux有关）。vmlinuz和initrd.img一般建议放在根目录下，这样可以方便知道分区的编号（命令中的“（hd0,0)”）。可以通过“find
/ vmlinuz”命令来获得，需要注意中间的空格。&lt;/p&gt;
&lt;p&gt;[codesyntax lang="bash" lines="no"]&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;kernel (hd0,0)/vmlinuz
initrd (hd0,0)/initrd.img
boot
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;[/codesyntax]&lt;/p&gt;
&lt;p&gt;硬盘安装还需要注意的是映像所存放的文件系统。ntfs可能会使映像无法找到，最好使用fat32或linux的文件系统。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.opensuse liveUSB安装&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这次安装linux，本来打算是安装centos的，因为之前对centos进行过lamp的安装（参考&lt;a href="http://www.centospub.com/"&gt;centos
pub&lt;/a&gt;）。可是后来硬盘安装centos时出现了问题，以致电脑无法启动。当时在实验室，手头只有u盘，只好用u盘来安装。在网上搜了些教程后，决定选择opensuse(因为它最简单)来安装。下面内容截取自&lt;a href="http://cn.opensuse.org/index.php?title=LiveUSB&amp;amp;diff=prev&amp;amp;oldid=3791"&gt;opensuse
wiki上liveUSB&lt;/a&gt;的安装方法。&lt;/p&gt;
&lt;p&gt;1) 找到您的 USB 驱动盘被识别的方式:&lt;/p&gt;
&lt;p&gt;``` {style="padding-left: 30px;"}
 linux-vgqb:~ # ls -l /dev/disk/by-id/&lt;em&gt;usb&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;该命令将会输出如下结果&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;

&lt;span class="err"&gt;```&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;padding-left: 30px;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;lrwxrwxrwx&lt;/span&gt; &lt;span class="nt"&gt;1&lt;/span&gt; &lt;span class="nt"&gt;root&lt;/span&gt; &lt;span class="nt"&gt;root&lt;/span&gt; &lt;span class="nt"&gt;9&lt;/span&gt; &lt;span class="nt"&gt;13&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nt"&gt;Aug&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt;&lt;span class="nd"&gt;:04&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;disk&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;by-id&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;usb-Kingston_DataTraveler_II&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nt"&gt;_5B751D8C1994-0&lt;/span&gt;&lt;span class="nd"&gt;:0&lt;/span&gt; &lt;span class="nt"&gt;-&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;../../&lt;/span&gt;&lt;span class="nt"&gt;sdb&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在此 &lt;em&gt;/dev/sdb&lt;/em&gt; 是命令行中的简称，通常，直接使用 &lt;em&gt;/dev/disk/by-id/..&lt;/em&gt;
以防止写错硬盘导致数据丢失。&lt;/p&gt;
&lt;p&gt;2) 将 LiveCD iso 写入 usb stick, 请注意将这里举例的 /dev/sdb
用您自己的具体硬盘设备代替（上面命令输出的设备信息）:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;{style="padding-left: 30px;"}
dd if=openSUSE-KDE4-LiveCD-x86_64-Build0219-Media.iso of=/dev/sdb bs=4M&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. lamp的安装&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;装上opensuse后，网上搜了下lamp的安装方法，结果意外找到一个不错的网站&lt;a href="http://www.howtoforge.com"&gt;howtoforge&lt;/a&gt;。通过上面的教程，成功安装上了lamp。开始在本地都浏览都没有任何问题，可是后来换台主机浏览就出现了异常情况。好端端的html文件都打不开（提示下载什么bin文件），而且图片都无法显示，而linux服务器上却能正常访问。这着实让我郁闷！想找人问，却发现现在才早上8点。只好自己在网上搜索，在碰壁N次之后居然让我给找到了。在apache的配置文件中添加如下两行内容。不过这个原因，直到现在我也没弄懂。在xamp网站上，只是说不添加这两行，某些linux服务器下无法显示图片。这里只记录下问题的表现，所有的静态文件使用浏览器打开时会在首部添加上http的头信息和一些不知名的乱码（下次有空研究一下，可能会弄清楚问题的原因）。&lt;/p&gt;
&lt;p&gt;[codesyntax lang="apache"]&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;EnableSendfile Off
EnableMMAP Off
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;[/codesyntax]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. ssh的配置&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这里简单写下ssh的配置&lt;/p&gt;
&lt;p&gt;修改
sshd_config中的一些配置，然后对/etc/host.deny和/etc/host.allow进行修改。&lt;/p&gt;
&lt;p&gt;5.文件权限&lt;/p&gt;
&lt;p&gt;之前程序是在windows下编写和运行的，在对文件操作时不用考虑太多文件的权限问题。可转到linux后，文件的读写出现比较严重的问题。通过修改/etc/profile(貌似还可以通过修改.bash_profile或者.bashrc来实现)来实现文件创建时默认权限来解决。这里就用到了umask。umask
022是默认的，对新创建的文件夹是777-022=755,而文件则是666-022=644。&lt;/p&gt;</summary></entry><entry><title>ixwebhosting配置wordpress的安装</title><link href="/ixwebhostingpeizhiwordpressdeanzhuang.html" rel="alternate"></link><published>2010-03-12T13:33:00+08:00</published><author><name>lmatt wang</name></author><id>tag:,2010-03-12:ixwebhostingpeizhiwordpressdeanzhuang.html</id><summary type="html">&lt;p&gt;在域名目录下的cgi-bin目录中添加php.ini文件，文件内容如下。具体是什么意思，我还不太懂。:p&lt;/p&gt;
&lt;p&gt;[codesyntax lang="apache"]&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[PHP]&lt;/span&gt;
&lt;span class="na"&gt;display_errors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;Off&lt;/span&gt;

&lt;span class="na"&gt;mbstring.language&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;neutral&lt;/span&gt;
&lt;span class="na"&gt;mbstring.internal_encoding&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;EUC-JP&lt;/span&gt;
&lt;span class="na"&gt;mbstring.http_input&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;auto&lt;/span&gt;
&lt;span class="na"&gt;mbstring.http_output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;SJIS&lt;/span&gt;
&lt;span class="na"&gt;mbstring.encoding_translation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="na"&gt;mbstring.detect_order&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;auto&lt;/span&gt;
&lt;span class="na"&gt;mbstring.substitute_character&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="na"&gt;mbstring.func_overload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;0&lt;/span&gt;

&lt;span class="na"&gt;register_globals&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;Off&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;[/codesyntax]&lt;/p&gt;
&lt;p&gt;其他如joolma,durpal,textpattern貌似都可以这样配置（其中只有durpal没有试过）。&lt;/p&gt;</summary></entry><entry><title>开张第一篇，空间的由来</title><link href="/kaizhangdiyipiankongjiandeyoulai.html" rel="alternate"></link><published>2010-03-11T12:26:00+08:00</published><author><name>lmatt wang</name></author><id>tag:,2010-03-11:kaizhangdiyipiankongjiandeyoulai.html</id><summary type="html">&lt;p&gt;这个学期刚开学的时候，我在godadday上面买了个lmatt.info的域名。初期的想法是用那个域名搭上google
app
engine，免费用下空间。可是好景不长，由于gfw的问题，使得ghs.google.com经常无法访问以致空间无法解析。在忍受了一段时间频繁更换ip地址之后，鄙人的小宇宙迸发，狠下血本在ixwebhosting上买下了这个虚拟空间。几百块大洋，就这样交给了洋人！痛心！&lt;/p&gt;</summary></entry></feed>